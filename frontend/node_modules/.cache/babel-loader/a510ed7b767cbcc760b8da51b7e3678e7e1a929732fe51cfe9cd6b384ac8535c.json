{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/ProductivityInsights.jsx\",\n  _s = $RefreshSig$();\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst ProductivityInsights = ({ token }) => {\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Debugging log\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token passed to component:\", token);\n    // Check if the token is available\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n\n    // Fetch AI insights\n    fetchAIInsights(token)\n      .then((data) => {\n        setInsights(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching insights\", err);\n        setError(\"Failed to fetch insights. Please try again.\");\n        setLoading(false);\n      });\n  }, [token]);\n\n  if (loading) return <p>Loading AI insights...</p>;\n  if (error) return <p className=\"text-red-500\">{error}</p>;\n\n  if (!insights) return <p>No insights available at the moment.</p>;\n\n\n   // Prepare data for Bar chart\n   const barData = insights?.tasks?.length > 0 ? {\n    labels: insights.tasks.map(task => task.date),\n    datasets: [\n      {\n        label: 'Time Spent (minutes)',\n        data: insights.tasks.map(task => task.timeSpent),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      }\n    ]\n  } : null;\n  \n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {/* Productivity Trends }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n          <p>{insights.trends || \"No trend data available.\"}</p>\n        </div>\n\n        {/* Productivity Score }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n          <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n        </div>\n\n        {/* Task Optimizations }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n          {insights.suggestions?.length ? (\n            <ul className=\"list-disc ml-6\">\n              {insights.suggestions.map((tip, idx) => (\n                <li key={idx}>{tip}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No suggestions available.</p>\n          )}\n        </div>\n\n        {/* AI Insights Summary }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n  <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n  {barData ? (\n    <div className=\"w-full h-80\">\n      <Bar data={barData} options={{\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Daily Time Spent on Tasks',\n          },\n        },\n      }} />\n    </div>\n  ) : (\n    <p>No data available for daily time spent.</p>\n  )}\n</div>\n    </div>\n  );\n};\n\nexport default ProductivityInsights;\n\n*/\n\n// import React, { useEffect, useState } from \"react\";\n// import { Bar } from \"react-chartjs-2\";\n// import {\n//   Chart as ChartJS,\n//   Title,\n//   Tooltip,\n//   Legend,\n//   BarElement,\n//   CategoryScale,\n//   LinearScale,\n// } from \"chart.js\";\n// import { fetchAIInsights } from \"../services/api\";\n\n// // Register Chart.js components\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\n// const ProductivityInsights = ({ token }) => {\n//   const [insights, setInsights] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     console.log(\"Token passed to component:\", token);\n//     if (!token) {\n//       setError(\"Authentication token is missing.\");\n//       setLoading(false);\n//       return;\n//     }\n\n//     fetchAIInsights(token)\n//       .then((data) => {\n//         setInsights(data);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.error(\"Error fetching insights\", err);\n//         setError(\"Failed to fetch insights. Please try again.\");\n//         setLoading(false);\n//       });\n//   }, [token]);\n\n//   if (loading) return <p>Loading AI insights...</p>;\n//   if (error) return <p className=\"text-red-500\">{error}</p>;\n\n//   if (!insights) return <p>No insights available at the moment.</p>;\n\n//   // Prepare data for Bar chart\n//   const barData = insights?.tasks?.length > 0\n//     ? {\n//         labels: insights.tasks.map((task) => task.date),\n//         datasets: [\n//           {\n//             label: \"Time Spent (minutes)\",\n//             data: insights.tasks.map((task) => task.timeSpent),\n//             backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n//             borderColor: \"rgba(75, 192, 192, 1)\",\n//             borderWidth: 1,\n//           },\n//         ],\n//       }\n//     : null;\n\n//   return (\n//     <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n//       <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//         {/* Productivity Trends */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n//           <p>{insights.trends || \"No trend data available.\"}</p>\n//         </div>\n\n//         {/* Productivity Score */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n//           <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n//         </div>\n\n//         {/* Task Optimizations */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n//           {insights.suggestions?.length ? (\n//             <ul className=\"list-disc ml-6\">\n//               {insights.suggestions.map((tip, idx) => (\n//                 <li key={idx}>{tip}</li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No suggestions available.</p>\n//           )}\n//         </div>\n\n//         {/* AI Insights Summary*/}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n//   <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n//   {barData ? (\n//     <div className=\"w-full h-80\">\n//       <Bar\n//         data={barData}\n//         options={{\n//           responsive: true,\n//           plugins: {\n//             title: {\n//               display: true,\n//               text: \"Daily Time Spent on Tasks\",\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   ) : (\n//     <p>No data available for daily time spent. Check the data structure.</p>\n//   )}\n// </div>\n// </div>\n//     </div>\n//   );\n// };\n\n// export default ProductivityInsights;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\nimport '../../styles/ProductivityInsights.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst ProductivityInsights = ({\n  token\n}) => {\n  _s();\n  var _insights$tasks, _insights$suggestions;\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token passed to component:\", token);\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n    fetchAIInsights(token).then(data => {\n      setInsights(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching insights\", err);\n      setError(\"Failed to fetch insights. Please try again.\");\n      setLoading(false);\n    });\n  }, [token]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"insights-loading\",\n    children: \"Loading AI insights...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"insights-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 21\n  }, this);\n  if (!insights) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"insights-empty\",\n    children: \"No insights available at the moment.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 25\n  }, this);\n\n  // Prepare data for Bar chart\n  const barData = (insights === null || insights === void 0 ? void 0 : (_insights$tasks = insights.tasks) === null || _insights$tasks === void 0 ? void 0 : _insights$tasks.length) > 0 ? {\n    labels: insights.tasks.map(task => task.date),\n    datasets: [{\n      label: \"Time Spent (minutes)\",\n      data: insights.tasks.map(task => task.timeSpent),\n      backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n      borderColor: \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }]\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insights-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"insights-title\",\n      children: \"\\uD83D\\uDCCA AI Productivity Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-blue-700\",\n          children: \"\\uD83E\\uDDE0 Analyze Productivity Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"para-s\",\n          children: insights.trends || \"No trend data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-green-700\",\n          children: \"\\uD83D\\uDCC8 Productivity Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"para-s\",\n          children: insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-purple-700\",\n          children: \"\\uD83D\\uDCA1 Suggested Task Optimizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), (_insights$suggestions = insights.suggestions) !== null && _insights$suggestions !== void 0 && _insights$suggestions.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc ml-6 para-s\",\n          children: insights.suggestions.map((tip, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: tip\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"para-s\",\n          children: \"No suggestions available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 rounded-xl shadow border border-gray-200 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-yellow-700\",\n          children: \"\\uD83D\\uDCCA Time Spent on Tasks (Daily)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), barData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insights-chart\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: barData,\n            options: {\n              responsive: true,\n              plugins: {\n                title: {\n                  display: true,\n                  text: \"Daily Time Spent on Tasks\"\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data available for daily time spent. Check the data structure.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductivityInsights, \"3SN5EolxUuSnR/aabQTX2wElwNQ=\");\n_c = ProductivityInsights;\nexport default ProductivityInsights;\nvar _c;\n$RefreshReg$(_c, \"ProductivityInsights\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","fetchAIInsights","jsxDEV","_jsxDEV","register","ProductivityInsights","token","_s","_insights$tasks","_insights$suggestions","insights","setInsights","loading","setLoading","error","setError","localStorage","getItem","console","log","then","data","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","barData","tasks","length","labels","map","task","date","datasets","label","timeSpent","backgroundColor","borderColor","borderWidth","trends","score","suggestions","tip","idx","options","responsive","plugins","title","display","text","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/ProductivityInsights.jsx"],"sourcesContent":["\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst ProductivityInsights = ({ token }) => {\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Debugging log\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token passed to component:\", token);\n    // Check if the token is available\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n\n    // Fetch AI insights\n    fetchAIInsights(token)\n      .then((data) => {\n        setInsights(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching insights\", err);\n        setError(\"Failed to fetch insights. Please try again.\");\n        setLoading(false);\n      });\n  }, [token]);\n\n  if (loading) return <p>Loading AI insights...</p>;\n  if (error) return <p className=\"text-red-500\">{error}</p>;\n\n  if (!insights) return <p>No insights available at the moment.</p>;\n\n\n   // Prepare data for Bar chart\n   const barData = insights?.tasks?.length > 0 ? {\n    labels: insights.tasks.map(task => task.date),\n    datasets: [\n      {\n        label: 'Time Spent (minutes)',\n        data: insights.tasks.map(task => task.timeSpent),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      }\n    ]\n  } : null;\n  \n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {/* Productivity Trends }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n          <p>{insights.trends || \"No trend data available.\"}</p>\n        </div>\n\n        {/* Productivity Score }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n          <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n        </div>\n\n        {/* Task Optimizations }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n          {insights.suggestions?.length ? (\n            <ul className=\"list-disc ml-6\">\n              {insights.suggestions.map((tip, idx) => (\n                <li key={idx}>{tip}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No suggestions available.</p>\n          )}\n        </div>\n\n        {/* AI Insights Summary }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n  <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n  {barData ? (\n    <div className=\"w-full h-80\">\n      <Bar data={barData} options={{\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Daily Time Spent on Tasks',\n          },\n        },\n      }} />\n    </div>\n  ) : (\n    <p>No data available for daily time spent.</p>\n  )}\n</div>\n    </div>\n  );\n};\n\nexport default ProductivityInsights;\n\n*/\n\n// import React, { useEffect, useState } from \"react\";\n// import { Bar } from \"react-chartjs-2\";\n// import {\n//   Chart as ChartJS,\n//   Title,\n//   Tooltip,\n//   Legend,\n//   BarElement,\n//   CategoryScale,\n//   LinearScale,\n// } from \"chart.js\";\n// import { fetchAIInsights } from \"../services/api\";\n\n// // Register Chart.js components\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\n// const ProductivityInsights = ({ token }) => {\n//   const [insights, setInsights] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     console.log(\"Token passed to component:\", token);\n//     if (!token) {\n//       setError(\"Authentication token is missing.\");\n//       setLoading(false);\n//       return;\n//     }\n\n//     fetchAIInsights(token)\n//       .then((data) => {\n//         setInsights(data);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.error(\"Error fetching insights\", err);\n//         setError(\"Failed to fetch insights. Please try again.\");\n//         setLoading(false);\n//       });\n//   }, [token]);\n\n//   if (loading) return <p>Loading AI insights...</p>;\n//   if (error) return <p className=\"text-red-500\">{error}</p>;\n\n//   if (!insights) return <p>No insights available at the moment.</p>;\n\n//   // Prepare data for Bar chart\n//   const barData = insights?.tasks?.length > 0\n//     ? {\n//         labels: insights.tasks.map((task) => task.date),\n//         datasets: [\n//           {\n//             label: \"Time Spent (minutes)\",\n//             data: insights.tasks.map((task) => task.timeSpent),\n//             backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n//             borderColor: \"rgba(75, 192, 192, 1)\",\n//             borderWidth: 1,\n//           },\n//         ],\n//       }\n//     : null;\n\n//   return (\n//     <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n//       <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//         {/* Productivity Trends */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n//           <p>{insights.trends || \"No trend data available.\"}</p>\n//         </div>\n\n//         {/* Productivity Score */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n//           <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n//         </div>\n\n//         {/* Task Optimizations */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n//           {insights.suggestions?.length ? (\n//             <ul className=\"list-disc ml-6\">\n//               {insights.suggestions.map((tip, idx) => (\n//                 <li key={idx}>{tip}</li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No suggestions available.</p>\n//           )}\n//         </div>\n\n//         {/* AI Insights Summary*/}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n//   <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n//   {barData ? (\n//     <div className=\"w-full h-80\">\n//       <Bar\n//         data={barData}\n//         options={{\n//           responsive: true,\n//           plugins: {\n//             title: {\n//               display: true,\n//               text: \"Daily Time Spent on Tasks\",\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   ) : (\n//     <p>No data available for daily time spent. Check the data structure.</p>\n//   )}\n// </div>\n// </div>\n//     </div>\n//   );\n// };\n\n// export default ProductivityInsights;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\nimport '../../styles/ProductivityInsights.css'\n\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst ProductivityInsights = ({ token }) => {\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token passed to component:\", token);\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n\n    fetchAIInsights(token)\n      .then((data) => {\n        setInsights(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching insights\", err);\n        setError(\"Failed to fetch insights. Please try again.\");\n        setLoading(false);\n      });\n  }, [token]);\n\n  if (loading) return <p className=\"insights-loading\">Loading AI insights...</p>;\n  if (error) return <p className=\"insights-error\">{error}</p>;\n\n  if (!insights) return <p className=\"insights-empty\">No insights available at the moment.</p>;\n\n  // Prepare data for Bar chart\n  const barData = insights?.tasks?.length > 0\n    ? {\n        labels: insights.tasks.map((task) => task.date),\n        datasets: [\n          {\n            label: \"Time Spent (minutes)\",\n            data: insights.tasks.map((task) => task.timeSpent),\n            backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n            borderColor: \"rgba(75, 192, 192, 1)\",\n            borderWidth: 1,\n          },\n        ],\n      }\n    : null;\n\n  return (\n    <div className=\"insights-container\">\n      <h2 className=\"insights-title\">ðŸ“Š AI Productivity Insights</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {/* Productivity Trends */}\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n          <p className=\"para-s\">{insights.trends || \"No trend data available.\"}</p>\n        </div>\n\n        {/* Productivity Score */}\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n          <p className=\"para-s\">{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n        </div>\n\n        {/* Task Optimizations */}\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n          {insights.suggestions?.length ? (\n            <ul className=\"list-disc ml-6 para-s\">\n              {insights.suggestions.map((tip, idx) => (\n                <li key={idx}>{tip}</li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"para-s\">No suggestions available.</p>\n          )}\n        </div>\n\n        {/* AI Insights Summary*/}\n        <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n          <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n          {barData ? (\n            <div className=\"insights-chart\">\n              <Bar\n                data={barData}\n                options={{\n                  responsive: true,\n                  plugins: {\n                    title: {\n                      display: true,\n                      text: \"Daily Time Spent on Tasks\",\n                    },\n                  },\n                }}\n              />\n            </div>\n          ) : (\n            <p>No data available for daily time spent. Check the data structure.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductivityInsights;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}