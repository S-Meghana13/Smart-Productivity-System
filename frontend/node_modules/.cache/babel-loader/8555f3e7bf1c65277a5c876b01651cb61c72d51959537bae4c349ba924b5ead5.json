{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/admin/MonitorProductivity.jsx\",\n  _s = $RefreshSig$();\n// src/components/admin/MonitorProductivity.jsx\n/*import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/MonitorProductivity.css\"; // Optional styling\n\nconst MonitorProductivity = () => {\n  const [productivityData, setProductivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch productivity trends data from backend\n    const fetchProductivityData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/adminproductivity\");\n        setProductivityData(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching productivity data\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchProductivityData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading productivity data...</div>;\n  }\n\n  return (\n    <div className=\"monitor-productivity\">\n      <h1>Monitor Productivity Trends</h1>\n      <div className=\"productivity-reports\">\n        {productivityData.length === 0 ? (\n          <p>No productivity data available.</p>\n        ) : (\n          <div className=\"reports\">\n            {productivityData.map((data, index) => (\n              <div key={index} className=\"report-card\">\n                <h3>{data.userName}</h3>\n                <p>Overall Productivity: {data.productivityScore}%</p>\n                <p>Time Spent: {data.timeSpent} hours</p>\n                <p>Tasks Completed: {data.tasksCompleted}</p>\n                <p>Last Login: {data.lastLogin}</p>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MonitorProductivity;\n*/\n\n// components/ProductivityDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonitorProductivity = ({\n  userId\n}) => {\n  _s();\n  const [productivityData, setProductivityData] = useState(null);\n  useEffect(() => {\n    const fetchProductivity = async () => {\n      try {\n        const response = await axios.get(`/api/productivity/get-productivity/${userId}`);\n        setProductivityData(response.data);\n      } catch (err) {\n        console.error('Error fetching productivity data:', err);\n      }\n    };\n    fetchProductivity();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: productivityData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Productivity Score: \", productivityData[0].productivityScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Activity: \", new Date(productivityData[0].lastActivity).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Activity Details: \", productivityData[0].activityDetails]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading productivity data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(MonitorProductivity, \"kOFpywnWfUJQea5ZEv1O2NgdB2U=\");\n_c = MonitorProductivity;\nexport default MonitorProductivity;\nvar _c;\n$RefreshReg$(_c, \"MonitorProductivity\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MonitorProductivity","userId","_s","productivityData","setProductivityData","fetchProductivity","response","get","data","err","console","error","children","productivityScore","fileName","_jsxFileName","lineNumber","columnNumber","Date","lastActivity","toLocaleString","activityDetails","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/admin/MonitorProductivity.jsx"],"sourcesContent":["// src/components/admin/MonitorProductivity.jsx\n/*import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/MonitorProductivity.css\"; // Optional styling\n\nconst MonitorProductivity = () => {\n  const [productivityData, setProductivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch productivity trends data from backend\n    const fetchProductivityData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/adminproductivity\");\n        setProductivityData(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching productivity data\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchProductivityData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading productivity data...</div>;\n  }\n\n  return (\n    <div className=\"monitor-productivity\">\n      <h1>Monitor Productivity Trends</h1>\n      <div className=\"productivity-reports\">\n        {productivityData.length === 0 ? (\n          <p>No productivity data available.</p>\n        ) : (\n          <div className=\"reports\">\n            {productivityData.map((data, index) => (\n              <div key={index} className=\"report-card\">\n                <h3>{data.userName}</h3>\n                <p>Overall Productivity: {data.productivityScore}%</p>\n                <p>Time Spent: {data.timeSpent} hours</p>\n                <p>Tasks Completed: {data.tasksCompleted}</p>\n                <p>Last Login: {data.lastLogin}</p>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MonitorProductivity;\n*/\n\n// components/ProductivityDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst MonitorProductivity = ({ userId }) => {\n  const [productivityData, setProductivityData] = useState(null);\n\n  useEffect(() => {\n    const fetchProductivity = async () => {\n      try {\n        const response = await axios.get(`/api/productivity/get-productivity/${userId}`);\n        setProductivityData(response.data);\n      } catch (err) {\n        console.error('Error fetching productivity data:', err);\n      }\n    };\n\n    fetchProductivity();\n  }, [userId]);\n\n  return (\n    <div>\n      {productivityData ? (\n        <div>\n          <h3>Productivity Score: {productivityData[0].productivityScore}</h3>\n          <p>Last Activity: {new Date(productivityData[0].lastActivity).toLocaleString()}</p>\n          <p>Activity Details: {productivityData[0].activityDetails}</p>\n        </div>\n      ) : (\n        <p>Loading productivity data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default MonitorProductivity;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,sCAAsCN,MAAM,EAAE,CAAC;QAChFG,mBAAmB,CAACE,QAAQ,CAACE,IAAI,CAAC;MACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEF,GAAG,CAAC;MACzD;IACF,CAAC;IAEDJ,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAa,QAAA,EACGT,gBAAgB,gBACfJ,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAI,sBAAoB,EAACT,gBAAgB,CAAC,CAAC,CAAC,CAACU,iBAAiB;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpElB,OAAA;QAAAa,QAAA,GAAG,iBAAe,EAAC,IAAIM,IAAI,CAACf,gBAAgB,CAAC,CAAC,CAAC,CAACgB,YAAY,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnFlB,OAAA;QAAAa,QAAA,GAAG,oBAAkB,EAACT,gBAAgB,CAAC,CAAC,CAAC,CAACkB,eAAe;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,gBAENlB,OAAA;MAAAa,QAAA,EAAG;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BIF,mBAAmB;AAAAsB,EAAA,GAAnBtB,mBAAmB;AA+BzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}