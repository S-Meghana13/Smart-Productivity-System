{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/CreateTask.jsx\",\n  _s = $RefreshSig$();\n/*import axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateTask = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('pending');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n\n    if (!token) {\n      console.error(\"No token found! Please log in.\");\n      return; // Optionally, redirect to login page if no token is found\n    }\n\n    try {\n      await axios.post(\"http://localhost:5000/api/tasks\", {\n        title,\n        description,\n        status,\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Attach the token to the request header\n        },\n      });\n      navigate('/dashboard/tasks'); // Redirect after task creation\n    } catch (error) {\n      console.error('Error creating task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl mb-4\">Create Task</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n          required\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        />\n        <select\n          value={status}\n          onChange={(e) => setStatus(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        >\n          <option value=\"pending\">Pending</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n          Create Task\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateTask;*/\n\n// CreateTask.jsx\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const CreateTask = () => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [status, setStatus] = useState(\"pending\");\n\n//   const handleCreate = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem(\"token\");\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/tasks\",\n//         { title, description, status },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       alert(\"Task Created Successfully!\");\n//       console.log(res.data);\n//     } catch (error) {\n//       console.error(\"Error creating task:\", error.response?.data || error.message);\n//       alert(\"Error creating task\");\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleCreate}>\n//       <input placeholder=\"Title\" onChange={(e) => setTitle(e.target.value)} required />\n//       <textarea placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} required />\n//       <select onChange={(e) => setStatus(e.target.value)}>\n//         <option value=\"pending\">Pending</option>\n//         <option value=\"in progress\">In Progress</option>\n//         <option value=\"completed\">Completed</option>\n//       </select>\n//       <button type=\"submit\">Create Task</button>\n//     </form>\n//   );\n// };\n\n// export default CreateTask;\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTask = ({\n  token\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:5000/api/tasks\", {\n        title,\n        description\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Task created!\");\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error creating task:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"/6NNF0FwJJsXLHIYvDErymUSBps=\");\n_c = CreateTask;\nconst token = localStorage.getItem(\"token\");\nawait axios.post(\"http://localhost:5000/api/tasks\", {\n  title,\n  description\n}, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["axios","useState","jsxDEV","_jsxDEV","CreateTask","token","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","post","headers","Authorization","alert","error","_error$response","console","response","data","message","onSubmit","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","localStorage","getItem","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/CreateTask.jsx"],"sourcesContent":["/*import axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateTask = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('pending');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n\n    if (!token) {\n      console.error(\"No token found! Please log in.\");\n      return; // Optionally, redirect to login page if no token is found\n    }\n\n    try {\n      await axios.post(\"http://localhost:5000/api/tasks\", {\n        title,\n        description,\n        status,\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Attach the token to the request header\n        },\n      });\n      navigate('/dashboard/tasks'); // Redirect after task creation\n    } catch (error) {\n      console.error('Error creating task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl mb-4\">Create Task</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n          required\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        />\n        <select\n          value={status}\n          onChange={(e) => setStatus(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        >\n          <option value=\"pending\">Pending</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n          Create Task\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateTask;*/\n\n\n// CreateTask.jsx\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const CreateTask = () => {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [status, setStatus] = useState(\"pending\");\n\n//   const handleCreate = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem(\"token\");\n\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:5000/api/tasks\",\n//         { title, description, status },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         }\n//       );\n//       alert(\"Task Created Successfully!\");\n//       console.log(res.data);\n//     } catch (error) {\n//       console.error(\"Error creating task:\", error.response?.data || error.message);\n//       alert(\"Error creating task\");\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleCreate}>\n//       <input placeholder=\"Title\" onChange={(e) => setTitle(e.target.value)} required />\n//       <textarea placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} required />\n//       <select onChange={(e) => setStatus(e.target.value)}>\n//         <option value=\"pending\">Pending</option>\n//         <option value=\"in progress\">In Progress</option>\n//         <option value=\"completed\">Completed</option>\n//       </select>\n//       <button type=\"submit\">Create Task</button>\n//     </form>\n//   );\n// };\n\n// export default CreateTask;\n\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst CreateTask = ({ token }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await axios.post(\n        \"http://localhost:5000/api/tasks\",\n        { title, description },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      alert(\"Task created!\");\n    } catch (error) {\n      console.error(\"Error creating task:\", error.response?.data || error.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\n      <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\" />\n      <button type=\"submit\">Create Task</button>\n    </form>\n  );\n};\nconst token = localStorage.getItem(\"token\");\n\nawait axios.post(\"http://localhost:5000/api/tasks\", \n  {\n    title,\n    description\n  },\n  {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    }\n  }\n);\n\n\nexport default CreateTask;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMb,KAAK,CAACc,IAAI,CACd,iCAAiC,EACjC;QAAEP,KAAK;QAAEE;MAAY,CAAC,EACtB;QACEM,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUX,KAAK;QAChC;MACF,CACF,CAAC;MACDY,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,IAAI,KAAIJ,KAAK,CAACK,OAAO,CAAC;IAC9E;EACF,CAAC;EAED,oBACEpB,OAAA;IAAMqB,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC3BtB,OAAA;MAAOuB,KAAK,EAAEnB,KAAM;MAACoB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtF9B,OAAA;MAAUuB,KAAK,EAAEjB,WAAY;MAACkB,QAAQ,EAAGf,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3G9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CA9BIF,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA+BhB,MAAMC,KAAK,GAAG+B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,MAAMrC,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAChD;EACEP,KAAK;EACLE;AACF,CAAC,EACD;EACEM,OAAO,EAAE;IACPC,aAAa,EAAE,UAAUX,KAAK;EAChC;AACF,CACF,CAAC;AAGD,eAAeD,UAAU;AAAC,IAAA+B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}