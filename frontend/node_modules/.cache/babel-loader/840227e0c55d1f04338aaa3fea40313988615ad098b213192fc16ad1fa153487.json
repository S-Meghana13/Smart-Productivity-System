{"ast":null,"code":"import axios from \"axios\";\n\n// Configure axios instance with base URL\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  // Base URL for all API calls\n  timeout: 5000 // Set a timeout of 5 seconds\n});\n\n// Fetch productivity insights\nexport const fetchInsights = async token => {\n  try {\n    const response = await api.get(\"/insights\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    // Check if the response contains the expected data\n    if (!response.data || !response.data.totalTime || !response.data.mostProductiveDay) {\n      throw new Error(\"Invalid data structure received from server.\");\n    }\n    return response.data;\n  } catch (error) {\n    // Handle error (e.g., network failure, response error)\n    console.error(\"Error fetching insights:\", error.response || error.message);\n    throw error; // Rethrow error to be handled in the component\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","fetchInsights","token","response","get","headers","Authorization","data","totalTime","mostProductiveDay","Error","error","console","message"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// Configure axios instance with base URL\nconst api = axios.create({\n  baseURL: \"http://localhost:5000/api\", // Base URL for all API calls\n  timeout: 5000, // Set a timeout of 5 seconds\n});\n\n// Fetch productivity insights\nexport const fetchInsights = async (token) => {\n  try {\n    const response = await api.get(\"/insights\", {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    // Check if the response contains the expected data\n    if (!response.data || !response.data.totalTime || !response.data.mostProductiveDay) {\n      throw new Error(\"Invalid data structure received from server.\");\n    }\n\n    return response.data;\n  } catch (error) {\n    // Handle error (e.g., network failure, response error)\n    console.error(\"Error fetching insights:\", error.response || error.message);\n    throw error; // Rethrow error to be handled in the component\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE,IAAI,CAAE;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,KAAK,IAAK;EAC5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,WAAW,EAAE;MAC1CC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUJ,KAAK;MAAG;IAC9C,CAAC,CAAC;;IAEF;IACA,IAAI,CAACC,QAAQ,CAACI,IAAI,IAAI,CAACJ,QAAQ,CAACI,IAAI,CAACC,SAAS,IAAI,CAACL,QAAQ,CAACI,IAAI,CAACE,iBAAiB,EAAE;MAClF,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;IACjE;IAEA,OAAOP,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACR,QAAQ,IAAIQ,KAAK,CAACE,OAAO,CAAC;IAC1E,MAAMF,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}