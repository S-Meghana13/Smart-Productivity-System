{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/ProductivityInsights.jsx\",\n  _s = $RefreshSig$();\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst ProductivityInsights = ({ token }) => {\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Debugging log\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token passed to component:\", token);\n    // Check if the token is available\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n\n    // Fetch AI insights\n    fetchAIInsights(token)\n      .then((data) => {\n        setInsights(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching insights\", err);\n        setError(\"Failed to fetch insights. Please try again.\");\n        setLoading(false);\n      });\n  }, [token]);\n\n  if (loading) return <p>Loading AI insights...</p>;\n  if (error) return <p className=\"text-red-500\">{error}</p>;\n\n  if (!insights) return <p>No insights available at the moment.</p>;\n\n\n   // Prepare data for Bar chart\n   const barData = insights?.tasks?.length > 0 ? {\n    labels: insights.tasks.map(task => task.date),\n    datasets: [\n      {\n        label: 'Time Spent (minutes)',\n        data: insights.tasks.map(task => task.timeSpent),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      }\n    ]\n  } : null;\n  \n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {/* Productivity Trends }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n          <p>{insights.trends || \"No trend data available.\"}</p>\n        </div>\n\n        {/* Productivity Score }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n          <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n        </div>\n\n        {/* Task Optimizations }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n          {insights.suggestions?.length ? (\n            <ul className=\"list-disc ml-6\">\n              {insights.suggestions.map((tip, idx) => (\n                <li key={idx}>{tip}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No suggestions available.</p>\n          )}\n        </div>\n\n        {/* AI Insights Summary }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n  <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n  {barData ? (\n    <div className=\"w-full h-80\">\n      <Bar data={barData} options={{\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Daily Time Spent on Tasks',\n          },\n        },\n      }} />\n    </div>\n  ) : (\n    <p>No data available for daily time spent.</p>\n  )}\n</div>\n    </div>\n  );\n};\n\nexport default ProductivityInsights;\n\n*/\n\n// import React, { useEffect, useState } from \"react\";\n// import { Bar } from \"react-chartjs-2\";\n// import {\n//   Chart as ChartJS,\n//   Title,\n//   Tooltip,\n//   Legend,\n//   BarElement,\n//   CategoryScale,\n//   LinearScale,\n// } from \"chart.js\";\n// import { fetchAIInsights } from \"../services/api\";\n\n// // Register Chart.js components\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\n// const ProductivityInsights = ({ token }) => {\n//   const [insights, setInsights] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     console.log(\"Token passed to component:\", token);\n//     if (!token) {\n//       setError(\"Authentication token is missing.\");\n//       setLoading(false);\n//       return;\n//     }\n\n//     fetchAIInsights(token)\n//       .then((data) => {\n//         setInsights(data);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.error(\"Error fetching insights\", err);\n//         setError(\"Failed to fetch insights. Please try again.\");\n//         setLoading(false);\n//       });\n//   }, [token]);\n\n//   if (loading) return <p>Loading AI insights...</p>;\n//   if (error) return <p className=\"text-red-500\">{error}</p>;\n\n//   if (!insights) return <p>No insights available at the moment.</p>;\n\n//   // Prepare data for Bar chart\n//   const barData = insights?.tasks?.length > 0\n//     ? {\n//         labels: insights.tasks.map((task) => task.date),\n//         datasets: [\n//           {\n//             label: \"Time Spent (minutes)\",\n//             data: insights.tasks.map((task) => task.timeSpent),\n//             backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n//             borderColor: \"rgba(75, 192, 192, 1)\",\n//             borderWidth: 1,\n//           },\n//         ],\n//       }\n//     : null;\n\n//   return (\n//     <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n//       <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//         {/* Productivity Trends */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n//           <p>{insights.trends || \"No trend data available.\"}</p>\n//         </div>\n\n//         {/* Productivity Score */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n//           <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n//         </div>\n\n//         {/* Task Optimizations */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n//           {insights.suggestions?.length ? (\n//             <ul className=\"list-disc ml-6\">\n//               {insights.suggestions.map((tip, idx) => (\n//                 <li key={idx}>{tip}</li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No suggestions available.</p>\n//           )}\n//         </div>\n\n//         {/* AI Insights Summary*/}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n//   <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n//   {barData ? (\n//     <div className=\"w-full h-80\">\n//       <Bar\n//         data={barData}\n//         options={{\n//           responsive: true,\n//           plugins: {\n//             title: {\n//               display: true,\n//               text: \"Daily Time Spent on Tasks\",\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   ) : (\n//     <p>No data available for daily time spent. Check the data structure.</p>\n//   )}\n// </div>\n// </div>\n//     </div>\n//   );\n// };\n\n// export default ProductivityInsights;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\nimport \"../../styles/ProductivityInsights.css\"; // optional external CSS\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst ProductivityInsights = () => {\n  _s();\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n    fetchAIInsights(token).then(data => {\n      setInsights(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching insights\", err);\n      setError(\"Failed to fetch insights. Please try again.\");\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading AI insights...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 21\n  }, this);\n  if (!insights || !insights.tasks || insights.tasks.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No insights available at the moment.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 12\n  }, this);\n\n  // Prepare chart data\n  const barData = {\n    labels: insights.tasks.map(task => task.date),\n    datasets: [{\n      label: \"Time Spent (minutes)\",\n      data: insights.tasks.map(task => task.timeSpent),\n      backgroundColor: \"rgba(59, 130, 246, 0.6)\",\n      borderColor: \"rgba(59, 130, 246, 1)\",\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Time Spent Per Task (by Date)\"\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 10\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productivity-insights-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"insights-title\",\n      children: \"AI Productivity Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: barData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductivityInsights, \"3SN5EolxUuSnR/aabQTX2wElwNQ=\");\n_c = ProductivityInsights;\nexport default ProductivityInsights;\nvar _c;\n$RefreshReg$(_c, \"ProductivityInsights\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","fetchAIInsights","jsxDEV","_jsxDEV","register","ProductivityInsights","_s","insights","setInsights","loading","setLoading","error","setError","token","localStorage","getItem","then","data","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","tasks","length","barData","labels","map","task","date","datasets","label","timeSpent","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","ticks","stepSize","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/ProductivityInsights.jsx"],"sourcesContent":["\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst ProductivityInsights = ({ token }) => {\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Debugging log\n    const token = localStorage.getItem(\"token\");\n    console.log(\"Token passed to component:\", token);\n    // Check if the token is available\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n\n    // Fetch AI insights\n    fetchAIInsights(token)\n      .then((data) => {\n        setInsights(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching insights\", err);\n        setError(\"Failed to fetch insights. Please try again.\");\n        setLoading(false);\n      });\n  }, [token]);\n\n  if (loading) return <p>Loading AI insights...</p>;\n  if (error) return <p className=\"text-red-500\">{error}</p>;\n\n  if (!insights) return <p>No insights available at the moment.</p>;\n\n\n   // Prepare data for Bar chart\n   const barData = insights?.tasks?.length > 0 ? {\n    labels: insights.tasks.map(task => task.date),\n    datasets: [\n      {\n        label: 'Time Spent (minutes)',\n        data: insights.tasks.map(task => task.timeSpent),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      }\n    ]\n  } : null;\n  \n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {/* Productivity Trends }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n          <p>{insights.trends || \"No trend data available.\"}</p>\n        </div>\n\n        {/* Productivity Score }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n          <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n        </div>\n\n        {/* Task Optimizations }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n          {insights.suggestions?.length ? (\n            <ul className=\"list-disc ml-6\">\n              {insights.suggestions.map((tip, idx) => (\n                <li key={idx}>{tip}</li>\n              ))}\n            </ul>\n          ) : (\n            <p>No suggestions available.</p>\n          )}\n        </div>\n\n        {/* AI Insights Summary }\n        <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n  <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n  {barData ? (\n    <div className=\"w-full h-80\">\n      <Bar data={barData} options={{\n        responsive: true,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Daily Time Spent on Tasks',\n          },\n        },\n      }} />\n    </div>\n  ) : (\n    <p>No data available for daily time spent.</p>\n  )}\n</div>\n    </div>\n  );\n};\n\nexport default ProductivityInsights;\n\n*/\n\n// import React, { useEffect, useState } from \"react\";\n// import { Bar } from \"react-chartjs-2\";\n// import {\n//   Chart as ChartJS,\n//   Title,\n//   Tooltip,\n//   Legend,\n//   BarElement,\n//   CategoryScale,\n//   LinearScale,\n// } from \"chart.js\";\n// import { fetchAIInsights } from \"../services/api\";\n\n// // Register Chart.js components\n// ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\n// const ProductivityInsights = ({ token }) => {\n//   const [insights, setInsights] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     console.log(\"Token passed to component:\", token);\n//     if (!token) {\n//       setError(\"Authentication token is missing.\");\n//       setLoading(false);\n//       return;\n//     }\n\n//     fetchAIInsights(token)\n//       .then((data) => {\n//         setInsights(data);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.error(\"Error fetching insights\", err);\n//         setError(\"Failed to fetch insights. Please try again.\");\n//         setLoading(false);\n//       });\n//   }, [token]);\n\n//   if (loading) return <p>Loading AI insights...</p>;\n//   if (error) return <p className=\"text-red-500\">{error}</p>;\n\n//   if (!insights) return <p>No insights available at the moment.</p>;\n\n//   // Prepare data for Bar chart\n//   const barData = insights?.tasks?.length > 0\n//     ? {\n//         labels: insights.tasks.map((task) => task.date),\n//         datasets: [\n//           {\n//             label: \"Time Spent (minutes)\",\n//             data: insights.tasks.map((task) => task.timeSpent),\n//             backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n//             borderColor: \"rgba(75, 192, 192, 1)\",\n//             borderWidth: 1,\n//           },\n//         ],\n//       }\n//     : null;\n\n//   return (\n//     <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n//       <h2 className=\"text-2xl font-bold text-gray-800\">ðŸ“Š AI Productivity Insights</h2>\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n//         {/* Productivity Trends */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-blue-700\">ðŸ§  Analyze Productivity Trends</h3>\n//           <p>{insights.trends || \"No trend data available.\"}</p>\n//         </div>\n\n//         {/* Productivity Score */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-green-700\">ðŸ“ˆ Productivity Score</h3>\n//           <p>{insights.score ? `${insights.score}/100` : \"Not enough data to predict.\"}</p>\n//         </div>\n\n//         {/* Task Optimizations */}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200\">\n//           <h3 className=\"text-lg font-semibold text-purple-700\">ðŸ’¡ Suggested Task Optimizations</h3>\n//           {insights.suggestions?.length ? (\n//             <ul className=\"list-disc ml-6\">\n//               {insights.suggestions.map((tip, idx) => (\n//                 <li key={idx}>{tip}</li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p>No suggestions available.</p>\n//           )}\n//         </div>\n\n//         {/* AI Insights Summary*/}\n//         <div className=\"p-4 rounded-xl shadow border border-gray-200 mt-4\">\n//   <h3 className=\"text-lg font-semibold text-yellow-700\">ðŸ“Š Time Spent on Tasks (Daily)</h3>\n//   {barData ? (\n//     <div className=\"w-full h-80\">\n//       <Bar\n//         data={barData}\n//         options={{\n//           responsive: true,\n//           plugins: {\n//             title: {\n//               display: true,\n//               text: \"Daily Time Spent on Tasks\",\n//             },\n//           },\n//         }}\n//       />\n//     </div>\n//   ) : (\n//     <p>No data available for daily time spent. Check the data structure.</p>\n//   )}\n// </div>\n// </div>\n//     </div>\n//   );\n// };\n\n// export default ProductivityInsights;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  BarElement,\n  CategoryScale,\n  LinearScale,\n} from \"chart.js\";\nimport { fetchAIInsights } from \"../services/api\";\nimport \"../../styles/ProductivityInsights.css\"; // optional external CSS\n\n// Register Chart.js components\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst ProductivityInsights = () => {\n  const [insights, setInsights] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setError(\"Authentication token is missing.\");\n      setLoading(false);\n      return;\n    }\n\n    fetchAIInsights(token)\n      .then((data) => {\n        setInsights(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching insights\", err);\n        setError(\"Failed to fetch insights. Please try again.\");\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <p>Loading AI insights...</p>;\n  if (error) return <p className=\"text-red-500\">{error}</p>;\n  if (!insights || !insights.tasks || insights.tasks.length === 0)\n    return <p>No insights available at the moment.</p>;\n\n  // Prepare chart data\n  const barData = {\n    labels: insights.tasks.map((task) => task.date),\n    datasets: [\n      {\n        label: \"Time Spent (minutes)\",\n        data: insights.tasks.map((task) => task.timeSpent),\n        backgroundColor: \"rgba(59, 130, 246, 0.6)\",\n        borderColor: \"rgba(59, 130, 246, 1)\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: \"Time Spent Per Task (by Date)\",\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 10,\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"productivity-insights-container\">\n      <h2 className=\"insights-title\">AI Productivity Insights</h2>\n      <Bar data={barData} options={options} />\n    </div>\n  );\n};\n\nexport default ProductivityInsights;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}