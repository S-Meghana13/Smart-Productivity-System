{"ast":null,"code":"/*import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst TaskDetails = () => {\n  const [task, setTask] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/tasks/${id}`);\n        setTask(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchTask();\n  }, [id]);\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/tasks/${id}`);\n        navigate('/');\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  return task ? (\n    <div className=\"task-details\">\n      <h2>{task.title}</h2>\n      <p>{task.description}</p>\n      <p>Status: {task.status}</p>\n      <p>Created on: {new Date(task.createdAt).toLocaleDateString()}</p>\n\n      <div className=\"buttons\">\n        <button onClick={() => navigate(`/tasks/update/${task._id}`)}>Update</button>\n        <button onClick={handleDelete}>Delete</button>\n      </div>\n    </div>\n  ) : (\n    <div>Loading...</div>\n  );\n};\n\nexport default TaskDetails;\n*/","map":{"version":3,"names":[],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/TaskDetails.jsx"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst TaskDetails = () => {\n  const [task, setTask] = useState(null);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const res = await axios.get(`http://localhost:5000/api/tasks/${id}`);\n        setTask(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchTask();\n  }, [id]);\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/tasks/${id}`);\n        navigate('/');\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  return task ? (\n    <div className=\"task-details\">\n      <h2>{task.title}</h2>\n      <p>{task.description}</p>\n      <p>Status: {task.status}</p>\n      <p>Created on: {new Date(task.createdAt).toLocaleDateString()}</p>\n\n      <div className=\"buttons\">\n        <button onClick={() => navigate(`/tasks/update/${task._id}`)}>Update</button>\n        <button onClick={handleDelete}>Delete</button>\n      </div>\n    </div>\n  ) : (\n    <div>Loading...</div>\n  );\n};\n\nexport default TaskDetails;\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}