{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/SetGoalsandReminders.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\n\nconst SetGoalsAndReminders = ({ token }) => {\n  const { id: taskId } = useParams(); // ✅ get taskId from URL\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n  const [goal, setGoal] = useState({ title: \"\", description: \"\", dueDate: \"\", priority: \"Medium\" });\n  const [reminder, setReminder] = useState({ frequency: \"Daily\", time: \"09:00 AM\" });\n  const [procrastinationData, setProcrastinationData] = useState(null);\n  const [patterns, setPatterns] = useState([]);\n  \n  useEffect(() => {\n    // Fetch procrastination insights and productivity patterns from AI\n    fetchProcrastinationInsights(token)\n      .then(data => {\n        setProcrastinationData(data.insights);\n        setPatterns(data.patterns);\n      })\n      .catch(err => console.error('Error fetching insights:', err));\n  }, [token]);\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n  \n    saveGoalAndReminder(taskId, { goal, reminder }, token)\n      .then(response => {\n        console.log(\"Goal and Reminder saved successfully:\", response);\n      })\n      .catch(err => console.error('Error saving goal and reminder:', err));\n  };\n  \n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name in goal) {\n      setGoal({ ...goal, [name]: value });\n    } else {\n      setReminder({ ...reminder, [name]: value });\n    }\n  };\n\n  const goalForm = (\n    <div className=\"goal-form\">\n      <h2 className=\"text-xl font-semibold\">Set Your Productivity Goal</h2>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={goal.title}\n        placeholder=\"Goal Title\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <textarea\n        name=\"description\"\n        value={goal.description}\n        placeholder=\"Goal Description\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <input\n        type=\"datetime-local\"\n        name=\"dueDate\"\n        value={goal.dueDate}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <select\n        name=\"priority\"\n        value={goal.priority}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Low\">Low</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"High\">High</option>\n      </select>\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Goal</button>\n    </div>\n  );\n\n  const reminderForm = (\n    <div className=\"reminder-form\">\n      <h2 className=\"text-xl font-semibold\">Set Reminder Frequency</h2>\n      <select\n        name=\"frequency\"\n        value={reminder.frequency}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Daily\">Daily</option>\n        <option value=\"Weekly\">Weekly</option>\n        <option value=\"Custom\">Custom</option>\n      </select>\n      <input\n        type=\"time\"\n        name=\"time\"\n        value={reminder.time}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Reminder</button>\n    </div>\n  );\n\n  const procrastinationAnalysis = (\n    <div className=\"procrastination-analysis\">\n      <h2 className=\"text-xl font-semibold\">Procrastination Detection</h2>\n      {procrastinationData && (\n        <div>\n          <p>{procrastinationData.alerts}</p>\n          <div className=\"productivity-chart\">\n            <Line\n              data={{\n                labels: procrastinationData.dates,\n                datasets: [{\n                  label: 'Time Delayed in Task Completion (hrs)',\n                  data: procrastinationData.delays,\n                  borderColor: 'rgba(255, 99, 132, 0.2)',\n                  backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                }]\n              }}\n              options={{ responsive: true, plugins: { title: { display: true, text: 'Delays in Task Completion' }}}}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const productivityPatterns = (\n    <div className=\"productivity-patterns\">\n      <h2 className=\"text-xl font-semibold\">Your Productivity Patterns</h2>\n      <div>\n        <ul>\n          {patterns.map((pattern, idx) => (\n            <li key={idx}>{pattern}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      {goalForm}\n      {reminderForm}\n      {procrastinationAnalysis}\n      {productivityPatterns}\n    </div>\n  );\n};\n\nexport default SetGoalsAndReminders;\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // ✅ Import useParams at the top level\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetGoalsAndReminders = ({\n  token\n}) => {\n  _s();\n  const {\n    id: taskId\n  } = useParams(); // ✅ Use useParams directly in the component\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n\n  const [goal, setGoal] = useState({\n    title: \"\",\n    description: \"\",\n    dueDate: \"\",\n    priority: \"Medium\"\n  });\n  const [reminder, setReminder] = useState({\n    frequency: \"Daily\",\n    time: \"09:00 AM\"\n  });\n  useEffect(() => {\n    if (taskId) {\n      // Fetch procrastination insights (if needed) - Commented out as not used\n      // fetchProcrastinationInsights(token)\n      //   .then(data => {\n      //     setProcrastinationData(data.insights);\n      //     setPatterns(data.patterns);\n      //   })\n      //   .catch(err => console.error('Error fetching insights:', err));\n    } else {\n      console.error(\"Task ID is missing from URL.\");\n    }\n  }, [taskId, token]); // ✅ Ensure taskId and token are dependencies\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n\n    // Check if the taskId is valid before sending the request\n    saveGoalAndReminder(taskId, {\n      goal,\n      reminder\n    }, token).then(response => {\n      console.log(\"Goal and Reminder saved successfully:\", response);\n    }).catch(err => console.error('Error saving goal and reminder:', err));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name in goal) {\n      setGoal({\n        ...goal,\n        [name]: value\n      });\n    } else {\n      setReminder({\n        ...reminder,\n        [name]: value\n      });\n    }\n  };\n  const goalForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Set Your Productivity Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: goal.title,\n      placeholder: \"Goal Title\",\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      value: goal.description,\n      placeholder: \"Goal Description\",\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      name: \"dueDate\",\n      value: goal.dueDate,\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"priority\",\n      value: goal.priority,\n      onChange: handleInputChange,\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"High\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveGoalAndReminder,\n      className: \"save-btn\",\n      children: \"Save Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n  const reminderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Set Reminder Frequency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"frequency\",\n      value: reminder.frequency,\n      onChange: handleInputChange,\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Daily\",\n        children: \"Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Weekly\",\n        children: \"Weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Custom\",\n        children: \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      name: \"time\",\n      value: reminder.time,\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveGoalAndReminder,\n      className: \"save-btn\",\n      children: \"Save Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-2xl shadow-md space-y-6\",\n    children: [goalForm, reminderForm]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(SetGoalsAndReminders, \"gfFehjwsHmd4uLNrOGnGk1WkzQ8=\", false, function () {\n  return [useParams];\n});\n_c = SetGoalsAndReminders;\nexport default SetGoalsAndReminders;\nvar _c;\n$RefreshReg$(_c, \"SetGoalsAndReminders\");","map":{"version":3,"names":["React","useState","useEffect","useParams","fetchProcrastinationInsights","saveGoalAndReminder","jsxDEV","_jsxDEV","SetGoalsAndReminders","token","_s","id","taskId","console","log","goal","setGoal","title","description","dueDate","priority","reminder","setReminder","frequency","time","error","handleSaveGoalAndReminder","then","response","catch","err","handleInputChange","e","name","value","target","goalForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","reminderForm","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/SetGoalsandReminders.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\n\nconst SetGoalsAndReminders = ({ token }) => {\n  const { id: taskId } = useParams(); // ✅ get taskId from URL\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n  const [goal, setGoal] = useState({ title: \"\", description: \"\", dueDate: \"\", priority: \"Medium\" });\n  const [reminder, setReminder] = useState({ frequency: \"Daily\", time: \"09:00 AM\" });\n  const [procrastinationData, setProcrastinationData] = useState(null);\n  const [patterns, setPatterns] = useState([]);\n  \n  useEffect(() => {\n    // Fetch procrastination insights and productivity patterns from AI\n    fetchProcrastinationInsights(token)\n      .then(data => {\n        setProcrastinationData(data.insights);\n        setPatterns(data.patterns);\n      })\n      .catch(err => console.error('Error fetching insights:', err));\n  }, [token]);\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n  \n    saveGoalAndReminder(taskId, { goal, reminder }, token)\n      .then(response => {\n        console.log(\"Goal and Reminder saved successfully:\", response);\n      })\n      .catch(err => console.error('Error saving goal and reminder:', err));\n  };\n  \n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name in goal) {\n      setGoal({ ...goal, [name]: value });\n    } else {\n      setReminder({ ...reminder, [name]: value });\n    }\n  };\n\n  const goalForm = (\n    <div className=\"goal-form\">\n      <h2 className=\"text-xl font-semibold\">Set Your Productivity Goal</h2>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={goal.title}\n        placeholder=\"Goal Title\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <textarea\n        name=\"description\"\n        value={goal.description}\n        placeholder=\"Goal Description\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <input\n        type=\"datetime-local\"\n        name=\"dueDate\"\n        value={goal.dueDate}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <select\n        name=\"priority\"\n        value={goal.priority}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Low\">Low</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"High\">High</option>\n      </select>\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Goal</button>\n    </div>\n  );\n\n  const reminderForm = (\n    <div className=\"reminder-form\">\n      <h2 className=\"text-xl font-semibold\">Set Reminder Frequency</h2>\n      <select\n        name=\"frequency\"\n        value={reminder.frequency}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Daily\">Daily</option>\n        <option value=\"Weekly\">Weekly</option>\n        <option value=\"Custom\">Custom</option>\n      </select>\n      <input\n        type=\"time\"\n        name=\"time\"\n        value={reminder.time}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Reminder</button>\n    </div>\n  );\n\n  const procrastinationAnalysis = (\n    <div className=\"procrastination-analysis\">\n      <h2 className=\"text-xl font-semibold\">Procrastination Detection</h2>\n      {procrastinationData && (\n        <div>\n          <p>{procrastinationData.alerts}</p>\n          <div className=\"productivity-chart\">\n            <Line\n              data={{\n                labels: procrastinationData.dates,\n                datasets: [{\n                  label: 'Time Delayed in Task Completion (hrs)',\n                  data: procrastinationData.delays,\n                  borderColor: 'rgba(255, 99, 132, 0.2)',\n                  backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                }]\n              }}\n              options={{ responsive: true, plugins: { title: { display: true, text: 'Delays in Task Completion' }}}}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const productivityPatterns = (\n    <div className=\"productivity-patterns\">\n      <h2 className=\"text-xl font-semibold\">Your Productivity Patterns</h2>\n      <div>\n        <ul>\n          {patterns.map((pattern, idx) => (\n            <li key={idx}>{pattern}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      {goalForm}\n      {reminderForm}\n      {procrastinationAnalysis}\n      {productivityPatterns}\n    </div>\n  );\n};\n\nexport default SetGoalsAndReminders;\n*/\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // ✅ Import useParams at the top level\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\n\nconst SetGoalsAndReminders = ({ token }) => {\n  const { id: taskId } = useParams(); // ✅ Use useParams directly in the component\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n\n  const [goal, setGoal] = useState({ title: \"\", description: \"\", dueDate: \"\", priority: \"Medium\" });\n  const [reminder, setReminder] = useState({ frequency: \"Daily\", time: \"09:00 AM\" });\n\n  useEffect(() => {\n    if (taskId) {\n      // Fetch procrastination insights (if needed) - Commented out as not used\n      // fetchProcrastinationInsights(token)\n      //   .then(data => {\n      //     setProcrastinationData(data.insights);\n      //     setPatterns(data.patterns);\n      //   })\n      //   .catch(err => console.error('Error fetching insights:', err));\n    } else {\n      console.error(\"Task ID is missing from URL.\");\n    }\n  }, [taskId, token]); // ✅ Ensure taskId and token are dependencies\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n\n    // Check if the taskId is valid before sending the request\n    saveGoalAndReminder(taskId, { goal, reminder }, token)\n      .then(response => {\n        console.log(\"Goal and Reminder saved successfully:\", response);\n      })\n      .catch(err => console.error('Error saving goal and reminder:', err));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name in goal) {\n      setGoal({ ...goal, [name]: value });\n    } else {\n      setReminder({ ...reminder, [name]: value });\n    }\n  };\n\n  const goalForm = (\n    <div className=\"goal-form\">\n      <h2 className=\"text-xl font-semibold\">Set Your Productivity Goal</h2>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={goal.title}\n        placeholder=\"Goal Title\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <textarea\n        name=\"description\"\n        value={goal.description}\n        placeholder=\"Goal Description\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <input\n        type=\"datetime-local\"\n        name=\"dueDate\"\n        value={goal.dueDate}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <select\n        name=\"priority\"\n        value={goal.priority}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Low\">Low</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"High\">High</option>\n      </select>\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Goal</button>\n    </div>\n  );\n\n  const reminderForm = (\n    <div className=\"reminder-form\">\n      <h2 className=\"text-xl font-semibold\">Set Reminder Frequency</h2>\n      <select\n        name=\"frequency\"\n        value={reminder.frequency}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Daily\">Daily</option>\n        <option value=\"Weekly\">Weekly</option>\n        <option value=\"Custom\">Custom</option>\n      </select>\n      <input\n        type=\"time\"\n        name=\"time\"\n        value={reminder.time}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Reminder</button>\n    </div>\n  );\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      {goalForm}\n      {reminderForm}\n    </div>\n  );\n};\n\nexport default SetGoalsAndReminders;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}