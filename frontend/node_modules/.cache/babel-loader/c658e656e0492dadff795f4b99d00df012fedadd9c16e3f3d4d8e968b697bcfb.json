{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { PlusCircle } from 'lucide-react'; // Install this package to use icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/tasks');\n        setTasks(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-task-btn\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tasks/create\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), \" Create Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-title\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tasks/${task._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"task-card\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","PlusCircle","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","fetchTasks","res","get","data","err","console","error","className","children","to","size","fileName","_jsxFileName","lineNumber","columnNumber","map","task","_id","title","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/Tasks.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { PlusCircle } from 'lucide-react';  // Install this package to use icons\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/tasks');\n        setTasks(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  return (\n    <div className=\"tasks-dashboard\">\n      <div className=\"create-task-btn\">\n        <Link to=\"/tasks/create\">\n          <button><PlusCircle size={24} /> Create Task</button>\n        </Link>\n      </div>\n\n      <div className=\"tasks-list\">\n        {tasks.map(task => (\n          <div key={task._id} className=\"task-title\">\n            <Link to={`/tasks/${task._id}`}>\n              <button className=\"task-card\">{task.title}</button>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Tasks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,cAAc,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC;QAC9DH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9Bb,OAAA,CAACJ,IAAI;QAACkB,EAAE,EAAC,eAAe;QAAAD,QAAA,eACtBb,OAAA;UAAAa,QAAA,gBAAQb,OAAA,CAACF,UAAU;YAACiB,IAAI,EAAE;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAY;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENnB,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBV,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACbrB,OAAA;QAAoBY,SAAS,EAAC,YAAY;QAAAC,QAAA,eACxCb,OAAA,CAACJ,IAAI;UAACkB,EAAE,EAAE,UAAUO,IAAI,CAACC,GAAG,EAAG;UAAAT,QAAA,eAC7Bb,OAAA;YAAQY,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEQ,IAAI,CAACE;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C;MAAC,GAHCE,IAAI,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAnCKD,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}