{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/LogTimeToTask.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogTimeToTask = ({\n  taskId\n}) => {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const handleLogTime = async e => {\n    e.preventDefault();\n    if (minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:5000/api/tasks/${taskId}/log-time`,\n      // ✅ Updated URL\n      {\n        minutes\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      console.log(response.data);\n      alert(\"Time logged successfully!\");\n      setMinutes(0);\n    } catch (error) {\n      console.error(\"Error logging time:\", error);\n      alert(\"Error logging time.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-time-to-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Log Time for Task: \", taskId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogTime,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Minutes:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: minutes,\n          onChange: e => setMinutes(e.target.value),\n          min: \"1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LogTimeToTask, \"HFcCbNIXAf2ArcSVaMQTY7WyTwk=\");\n_c = LogTimeToTask;\nexport default LogTimeToTask;\nvar _c;\n$RefreshReg$(_c, \"LogTimeToTask\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LogTimeToTask","taskId","_s","minutes","setMinutes","handleLogTime","e","preventDefault","alert","response","post","headers","Authorization","localStorage","getItem","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","min","required","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/LogTimeToTask.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst LogTimeToTask = ({ taskId }) => {\n  const [minutes, setMinutes] = useState(0);\n\n  const handleLogTime = async (e) => {\n    e.preventDefault();\n\n    if (minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/api/tasks/${taskId}/log-time`, // ✅ Updated URL\n        { minutes },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      );\n      console.log(response.data);\n      alert(\"Time logged successfully!\");\n      setMinutes(0);\n    } catch (error) {\n      console.error(\"Error logging time:\", error);\n      alert(\"Error logging time.\");\n    }\n  };\n\n  return (\n    <div className=\"log-time-to-task\">\n      <h3>Log Time for Task: {taskId}</h3>\n      <form onSubmit={handleLogTime}>\n        <label>\n          Minutes:\n          <input\n            type=\"number\"\n            value={minutes}\n            onChange={(e) => setMinutes(e.target.value)}\n            min=\"1\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Log Time</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LogTimeToTask;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMS,aAAa,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIJ,OAAO,IAAI,CAAC,EAAE;MAChBK,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,mCAAmCT,MAAM,WAAW;MAAE;MACtD;QAAEE;MAAQ,CAAC,EACX;QACEQ,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CACF,CAAC;MACDC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,CAAC;MAC1BT,KAAK,CAAC,2BAA2B,CAAC;MAClCJ,UAAU,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CV,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACET,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BrB,OAAA;MAAAqB,QAAA,GAAI,qBAAmB,EAACnB,MAAM;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCzB,OAAA;MAAM0B,QAAQ,EAAEpB,aAAc;MAAAe,QAAA,gBAC5BrB,OAAA;QAAAqB,QAAA,GAAO,UAEL,eAAArB,OAAA;UACE2B,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAExB,OAAQ;UACfyB,QAAQ,EAAGtB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;UAC5CG,GAAG,EAAC,GAAG;UACPC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhDIF,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}