{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/TrackProductivity.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TrackProductivity = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [timeLogs, setTimeLogs] = useState({});\n\n//   useEffect(() => {\n//     const fetchTasks = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const res = await axios.get('http://localhost:5000/api/tasks', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setTasks(res.data);\n//       } catch (err) {\n//         console.error(err);\n//       }\n//     };\n//     fetchTasks();\n//   }, []);\n\n//   const handleLogTime = async (taskId) => {\n//     const minutes = prompt('Enter minutes spent on this task:');\n//     if (!minutes || isNaN(minutes)) return alert('Enter valid number');\n\n//     try {\n//       const token = localStorage.getItem('token');\n//       await axios.post(\n//         `http://localhost:5000/api/tasks/${taskId}/log-time`,\n//         { minutes: Number(minutes) },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       alert('Time logged successfully');\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-4xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Productivity Analysis</h2>\n//       {tasks.map((task) => (\n//         <div\n//           key={task._id}\n//           className=\"bg-white shadow p-4 mb-4 rounded border border-gray-200\"\n//         >\n//           <h3 className=\"text-xl font-semibold\">{task.title}</h3>\n//           <p>{task.description}</p>\n//           <button\n//             className=\"mt-2 px-4 py-1 bg-blue-600 text-white rounded\"\n//             onClick={() => handleLogTime(task._id)}\n//           >\n//             Log Time\n//           </button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TrackProductivity;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../styles/TrackProductivity.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackProductivity = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('http://localhost:5000/api/tasks', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTasks(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleLogTime = async taskId => {\n    const minutes = prompt('Enter minutes spent on this task:');\n    if (!minutes || isNaN(minutes)) return alert('Enter a valid number');\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5000/api/tasks/${taskId}/log-time`, {\n        minutes: Number(minutes)\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Time logged successfully');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"track-header\",\n      children: \"Productivity Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"task-title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-desc\",\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"log-time-button\",\n        onClick: () => handleLogTime(task._id),\n        children: \"Log Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, task._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackProductivity, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TrackProductivity;\nexport default TrackProductivity;\nvar _c;\n$RefreshReg$(_c, \"TrackProductivity\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TrackProductivity","_s","tasks","setTasks","fetchTasks","token","localStorage","getItem","res","get","headers","Authorization","data","err","console","error","handleLogTime","taskId","minutes","prompt","isNaN","alert","post","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","title","description","onClick","_id","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/TrackProductivity.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TrackProductivity = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [timeLogs, setTimeLogs] = useState({});\n\n//   useEffect(() => {\n//     const fetchTasks = async () => {\n//       try {\n//         const token = localStorage.getItem('token');\n//         const res = await axios.get('http://localhost:5000/api/tasks', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setTasks(res.data);\n//       } catch (err) {\n//         console.error(err);\n//       }\n//     };\n//     fetchTasks();\n//   }, []);\n\n//   const handleLogTime = async (taskId) => {\n//     const minutes = prompt('Enter minutes spent on this task:');\n//     if (!minutes || isNaN(minutes)) return alert('Enter valid number');\n\n//     try {\n//       const token = localStorage.getItem('token');\n//       await axios.post(\n//         `http://localhost:5000/api/tasks/${taskId}/log-time`,\n//         { minutes: Number(minutes) },\n//         { headers: { Authorization: `Bearer ${token}` } }\n//       );\n//       alert('Time logged successfully');\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-4xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Productivity Analysis</h2>\n//       {tasks.map((task) => (\n//         <div\n//           key={task._id}\n//           className=\"bg-white shadow p-4 mb-4 rounded border border-gray-200\"\n//         >\n//           <h3 className=\"text-xl font-semibold\">{task.title}</h3>\n//           <p>{task.description}</p>\n//           <button\n//             className=\"mt-2 px-4 py-1 bg-blue-600 text-white rounded\"\n//             onClick={() => handleLogTime(task._id)}\n//           >\n//             Log Time\n//           </button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TrackProductivity;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../styles/TrackProductivity.css';\n\nconst TrackProductivity = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('http://localhost:5000/api/tasks', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setTasks(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  const handleLogTime = async (taskId) => {\n    const minutes = prompt('Enter minutes spent on this task:');\n    if (!minutes || isNaN(minutes)) return alert('Enter a valid number');\n\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(\n        `http://localhost:5000/api/tasks/${taskId}/log-time`,\n        { minutes: Number(minutes) },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert('Time logged successfully');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"track-container\">\n      <h2 className=\"track-header\">Productivity Analysis</h2>\n      {tasks.length === 0 ? (\n        <p>No tasks found.</p>\n      ) : (\n        tasks.map((task) => (\n          <div key={task._id} className=\"task-card\">\n            <h3 className=\"task-title\">{task.title}</h3>\n            <p className=\"task-desc\">{task.description}</p>\n            <button\n              className=\"log-time-button\"\n              onClick={() => handleLogTime(task._id)}\n            >\n              Log Time\n            </button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default TrackProductivity;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,iCAAiC,EAAE;UAC7DC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFF,QAAQ,CAACK,GAAG,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IACDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,aAAa,GAAG,MAAOC,MAAM,IAAK;IACtC,MAAMC,OAAO,GAAGC,MAAM,CAAC,mCAAmC,CAAC;IAC3D,IAAI,CAACD,OAAO,IAAIE,KAAK,CAACF,OAAO,CAAC,EAAE,OAAOG,KAAK,CAAC,sBAAsB,CAAC;IAEpE,IAAI;MACF,MAAMhB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMV,KAAK,CAACyB,IAAI,CACd,mCAAmCL,MAAM,WAAW,EACpD;QAAEC,OAAO,EAAEK,MAAM,CAACL,OAAO;MAAE,CAAC,EAC5B;QAAER,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAAE,CAClD,CAAC;MACDgB,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CAAC,OAAOR,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B1B,OAAA;MAAIyB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtD3B,KAAK,CAAC4B,MAAM,KAAK,CAAC,gBACjB/B,OAAA;MAAA0B,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEtB3B,KAAK,CAAC6B,GAAG,CAAEC,IAAI,iBACbjC,OAAA;MAAoByB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACvC1B,OAAA;QAAIyB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEO,IAAI,CAACC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5C9B,OAAA;QAAGyB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEO,IAAI,CAACE;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/C9B,OAAA;QACEyB,SAAS,EAAC,iBAAiB;QAC3BW,OAAO,EAAEA,CAAA,KAAMnB,aAAa,CAACgB,IAAI,CAACI,GAAG,CAAE;QAAAX,QAAA,EACxC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GARDG,IAAI,CAACI,GAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxDID,iBAAiB;AAAAqC,EAAA,GAAjBrC,iBAAiB;AA0DvB,eAAeA,iBAAiB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}