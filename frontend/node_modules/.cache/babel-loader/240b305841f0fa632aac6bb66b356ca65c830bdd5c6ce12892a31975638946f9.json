{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/CreateTask.jsx\",\n  _s = $RefreshSig$();\n/*import axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateTask = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('pending');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n\n    if (!token) {\n      console.error(\"No token found! Please log in.\");\n      return; // Optionally, redirect to login page if no token is found\n    }\n\n    try {\n      await axios.post(\"http://localhost:5000/api/tasks\", {\n        title,\n        description,\n        status,\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Attach the token to the request header\n        },\n      });\n      navigate('/dashboard/tasks'); // Redirect after task creation\n    } catch (error) {\n      console.error('Error creating task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl mb-4\">Create Task</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n          required\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        />\n        <select\n          value={status}\n          onChange={(e) => setStatus(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        >\n          <option value=\"pending\">Pending</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n          Create Task\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateTask;*/\n\n// CreateTask.jsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTask = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n  const handleCreate = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/tasks/create\", {\n        title,\n        description,\n        status\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Task Created Successfully!\");\n      console.log(res.data);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error creating task:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(\"Error creating task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreate,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title\",\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      onChange: e => setDescription(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setStatus(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"in progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTask, \"dXcPlqPml5g4pdasVQUXsEjaugs=\");\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateTask","_s","title","setTitle","description","setDescription","status","setStatus","handleCreate","e","preventDefault","token","localStorage","getItem","res","post","headers","Authorization","alert","console","log","data","error","_error$response","response","message","onSubmit","children","placeholder","onChange","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/CreateTask.jsx"],"sourcesContent":["/*import axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateTask = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('pending');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n\n    if (!token) {\n      console.error(\"No token found! Please log in.\");\n      return; // Optionally, redirect to login page if no token is found\n    }\n\n    try {\n      await axios.post(\"http://localhost:5000/api/tasks\", {\n        title,\n        description,\n        status,\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Attach the token to the request header\n        },\n      });\n      navigate('/dashboard/tasks'); // Redirect after task creation\n    } catch (error) {\n      console.error('Error creating task:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-xl mb-4\">Create Task</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n          required\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        />\n        <select\n          value={status}\n          onChange={(e) => setStatus(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n        >\n          <option value=\"pending\">Pending</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n          Create Task\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateTask;*/\n\n\n// CreateTask.jsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst CreateTask = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n\n    try {\n      const res = await axios.post(\n        \"http://localhost:5000/api/tasks/create\",\n        { title, description, status },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      alert(\"Task Created Successfully!\");\n      console.log(res.data);\n    } catch (error) {\n      console.error(\"Error creating task:\", error.response?.data || error.message);\n      alert(\"Error creating task\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleCreate}>\n      <input placeholder=\"Title\" onChange={(e) => setTitle(e.target.value)} required />\n      <textarea placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} required />\n      <select onChange={(e) => setStatus(e.target.value)}>\n        <option value=\"pending\">Pending</option>\n        <option value=\"in progress\">In Progress</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n      <button type=\"submit\">Create Task</button>\n    </form>\n  );\n};\n\nexport default CreateTask;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAE/C,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAC1B,wCAAwC,EACxC;QAAEb,KAAK;QAAEE,WAAW;QAAEE;MAAO,CAAC,EAC9B;QACEU,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CACF,CAAC;MACDO,KAAK,CAAC,4BAA4B,CAAC;MACnCC,OAAO,CAACC,GAAG,CAACN,GAAG,CAACO,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdJ,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACG,OAAO,CAAC;MAC5EP,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEnB,OAAA;IAAM2B,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBAC3B5B,OAAA;MAAO6B,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAGpB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAE;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjFrC,OAAA;MAAU6B,WAAW,EAAC,aAAa;MAACC,QAAQ,EAAGpB,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAE;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChGrC,OAAA;MAAQ8B,QAAQ,EAAGpB,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAE;MAAAJ,QAAA,gBACjD5B,OAAA;QAAQgC,KAAK,EAAC,SAAS;QAAAJ,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxCrC,OAAA;QAAQgC,KAAK,EAAC,aAAa;QAAAJ,QAAA,EAAC;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDrC,OAAA;QAAQgC,KAAK,EAAC,WAAW;QAAAJ,QAAA,EAAC;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACTrC,OAAA;MAAQsC,IAAI,EAAC,QAAQ;MAAAV,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAACnC,EAAA,CAvCID,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}