{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../styles/Tasks.css'; // optional for custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    status: 'pending'\n  });\n  const [editingId, setEditingId] = useState(null);\n  const fetchTasks = async () => {\n    const res = await axios.get('http://localhost:5000/api/tasks');\n    setTasks(res.data);\n  };\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`http://localhost:5000/api/tasks/${editingId}`, form);\n      setEditingId(null);\n    } else {\n      await axios.post('http://localhost:5000/api/tasks', form);\n    }\n    setForm({\n      title: '',\n      description: '',\n      status: 'pending'\n    });\n    fetchTasks();\n  };\n  const handleEdit = task => {\n    setForm({\n      title: task.title,\n      description: task.description,\n      status: task.status\n    });\n    setEditingId(task._id);\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      await axios.delete(`http://localhost:5000/api/tasks/${id}`);\n      fetchTasks();\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: form.title,\n        onChange: handleChange,\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: form.description,\n        onChange: handleChange,\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: form.status,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingId ? 'Update Task' : 'Create Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 16\n          }, this), \" \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(task.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(task._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"sGH+7Nf/jm4VuWaOtmM8tkJEeqY=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","form","setForm","title","description","status","editingId","setEditingId","fetchTasks","res","get","data","handleChange","e","target","name","value","handleSubmit","preventDefault","put","post","handleEdit","task","_id","handleDelete","id","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","type","map","Date","createdAt","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/Tasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../styles/Tasks.css'; // optional for custom styles\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]);\n  const [form, setForm] = useState({ title: '', description: '', status: 'pending' });\n  const [editingId, setEditingId] = useState(null);\n\n  const fetchTasks = async () => {\n    const res = await axios.get('http://localhost:5000/api/tasks');\n    setTasks(res.data);\n  };\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (editingId) {\n      await axios.put(`http://localhost:5000/api/tasks/${editingId}`, form);\n      setEditingId(null);\n    } else {\n      await axios.post('http://localhost:5000/api/tasks', form);\n    }\n    setForm({ title: '', description: '', status: 'pending' });\n    fetchTasks();\n  };\n\n  const handleEdit = (task) => {\n    setForm({ title: task.title, description: task.description, status: task.status });\n    setEditingId(task._id);\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      await axios.delete(`http://localhost:5000/api/tasks/${id}`);\n      fetchTasks();\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  return (\n    <div className=\"tasks-container\">\n      <h2>Task Management</h2>\n      <form onSubmit={handleSubmit}>\n        <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\n        <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" />\n        <select name=\"status\" value={form.status} onChange={handleChange}>\n          <option value=\"pending\">Pending</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button type=\"submit\">{editingId ? 'Update Task' : 'Create Task'}</button>\n      </form>\n\n      <div className=\"task-list\">\n        {tasks.map(task => (\n          <div key={task._id} className=\"task-card\">\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n            <p><strong>Status:</strong> {task.status}</p>\n            <p><small>{new Date(task.createdAt).toLocaleString()}</small></p>\n            <button onClick={() => handleEdit(task)}>Edit</button>\n            <button onClick={() => handleDelete(task._id)}>Delete</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Tasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}