{"ast":null,"code":"// src/services/api.js\n/*import axios from 'axios';\nconst fetchAIInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n// Add this function to save goals and reminders\nexport const saveGoalAndReminder = async (taskId, goal, reminderDate) => {\n  try {\n    const response = await axios.post(`/tasks/${taskId}/goals`, { goal, reminderDate });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving goal and reminder:\", error);\n    throw error;\n  }\n};\n\n// Add this function to fetch procrastination insights\nexport const fetchProcrastinationInsights = async (taskId) => {\n  try {\n    const response = await axios.get(`/tasks/${taskId}/procrastination-insights`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching procrastination insights:\", error);\n    throw error;\n  }\n};\n\n\n//export { fetchAIInsights };\nexport { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };*/\n\n// src/services/api.js\n// src/services/api.js\nimport axios from 'axios';\n\n// Function for fetching AI insights\nconst fetchAIInsights = async token => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n// Function to save goal and reminder\nconst saveGoalAndReminder = async (taskId, goal, reminderDate) => {\n  try {\n    const response = await axios.post(`/tasks/${taskId}/goals`, {\n      goal,\n      reminderDate\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving goal and reminder:\", error);\n    throw error;\n  }\n};\n\n// Function to fetch procrastination insights\nconst fetchProcrastinationInsights = async taskId => {\n  try {\n    const response = await axios.get(`/tasks/${taskId}/procrastination-insights`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching procrastination insights:\", error);\n    throw error;\n  }\n};\n\n// Export all functions in one statement\nexport { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };","map":{"version":3,"names":["axios","fetchAIInsights","token","response","fetch","method","headers","Authorization","ok","Error","data","json","err","console","error","saveGoalAndReminder","taskId","goal","reminderDate","post","fetchProcrastinationInsights","get"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/services/api.js"],"sourcesContent":["// src/services/api.js\n/*import axios from 'axios';\nconst fetchAIInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n// Add this function to save goals and reminders\nexport const saveGoalAndReminder = async (taskId, goal, reminderDate) => {\n  try {\n    const response = await axios.post(`/tasks/${taskId}/goals`, { goal, reminderDate });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving goal and reminder:\", error);\n    throw error;\n  }\n};\n\n// Add this function to fetch procrastination insights\nexport const fetchProcrastinationInsights = async (taskId) => {\n  try {\n    const response = await axios.get(`/tasks/${taskId}/procrastination-insights`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching procrastination insights:\", error);\n    throw error;\n  }\n};\n\n\n//export { fetchAIInsights };\nexport { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };*/\n\n// src/services/api.js\n// src/services/api.js\nimport axios from 'axios';\n\n// Function for fetching AI insights\nconst fetchAIInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n// Function to save goal and reminder\nconst saveGoalAndReminder = async (taskId, goal, reminderDate) => {\n  try {\n    const response = await axios.post(`/tasks/${taskId}/goals`, { goal, reminderDate });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving goal and reminder:\", error);\n    throw error;\n  }\n};\n\n// Function to fetch procrastination insights\nconst fetchProcrastinationInsights = async (taskId) => {\n  try {\n    const response = await axios.get(`/tasks/${taskId}/procrastination-insights`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching procrastination insights:\", error);\n    throw error;\n  }\n};\n\n// Export all functions in one statement\nexport { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,eAAe,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,EAAE;MACjFC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK;MAChC;IACF,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;IACpD,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA,MAAMG,mBAAmB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,EAAEC,YAAY,KAAK;EAChE,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACmB,IAAI,CAAC,UAAUH,MAAM,QAAQ,EAAE;MAAEC,IAAI;MAAEC;IAAa,CAAC,CAAC;IACnF,OAAOf,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMM,4BAA4B,GAAG,MAAOJ,MAAM,IAAK;EACrD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACqB,GAAG,CAAC,UAAUL,MAAM,2BAA2B,CAAC;IAC7E,OAAOb,QAAQ,CAACO,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,SAASb,eAAe,EAAEc,mBAAmB,EAAEK,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}