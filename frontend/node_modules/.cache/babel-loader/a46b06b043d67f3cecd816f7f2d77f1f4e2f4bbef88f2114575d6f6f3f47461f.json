{"ast":null,"code":"// src/services/api.js\n/*import axios from 'axios';\nconst fetchAIInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n// Add this function to save goals and reminders\nexport const saveGoalAndReminder = async (taskId, goal, reminderDate) => {\n  try {\n    const response = await axios.post(`/tasks/${taskId}/goals`, { goal, reminderDate });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving goal and reminder:\", error);\n    throw error;\n  }\n};\n\n// Add this function to fetch procrastination insights\nexport const fetchProcrastinationInsights = async (taskId) => {\n  try {\n    const response = await axios.get(`/tasks/${taskId}/procrastination-insights`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching procrastination insights:\", error);\n    throw error;\n  }\n};\n\n\n//export { fetchAIInsights };\nexport { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };*/\n\n// src/services/api.js\n// src/services/api.js\n//import axios from 'axios';\n\n// Function for fetching AI insights\nconst fetchAIInsights = async token => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n/*const fetchProcrastinationInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/insights/procrastination\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch procrastination insights\");\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"Error fetching procrastination insights:\", err);\n    throw err;\n  }\n};*/\n\nconst saveGoalAndReminder = async (taskId, goalData, token) => {\n  try {\n    // Ensure taskId is not undefined\n    if (!taskId) {\n      throw new Error(\"Task ID is missing\");\n    }\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/goal`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(goalData)\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\"Backend error response:\", errorText);\n      throw new Error(\"Failed to save goal and reminder\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error saving goal and reminder:\", err);\n    throw err;\n  }\n};\nexport { fetchAIInsights, saveGoalAndReminder };\n\n// Export all functions in one statement\n//export { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };","map":{"version":3,"names":["fetchAIInsights","token","response","fetch","method","headers","Authorization","ok","Error","data","json","err","console","error","saveGoalAndReminder","taskId","goalData","body","JSON","stringify","errorText","text"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/services/api.js"],"sourcesContent":["// src/services/api.js\n/*import axios from 'axios';\nconst fetchAIInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n// Add this function to save goals and reminders\nexport const saveGoalAndReminder = async (taskId, goal, reminderDate) => {\n  try {\n    const response = await axios.post(`/tasks/${taskId}/goals`, { goal, reminderDate });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error saving goal and reminder:\", error);\n    throw error;\n  }\n};\n\n// Add this function to fetch procrastination insights\nexport const fetchProcrastinationInsights = async (taskId) => {\n  try {\n    const response = await axios.get(`/tasks/${taskId}/procrastination-insights`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching procrastination insights:\", error);\n    throw error;\n  }\n};\n\n\n//export { fetchAIInsights };\nexport { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };*/\n\n// src/services/api.js\n// src/services/api.js\n//import axios from 'axios';\n\n// Function for fetching AI insights\nconst fetchAIInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/analytics/insights\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch AI insights\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error in fetching AI insights:\", err);\n    throw err;\n  }\n};\n\n/*const fetchProcrastinationInsights = async (token) => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/tasks/insights/procrastination\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch procrastination insights\");\n    }\n    return await response.json();\n  } catch (err) {\n    console.error(\"Error fetching procrastination insights:\", err);\n    throw err;\n  }\n};*/\n\nconst saveGoalAndReminder = async (taskId, goalData, token) => {\n  try {\n    // Ensure taskId is not undefined\n    if (!taskId) {\n      throw new Error(\"Task ID is missing\");\n    }\n\n    const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/goal`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(goalData),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\"Backend error response:\", errorText);\n      throw new Error(\"Failed to save goal and reminder\");\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(\"Error saving goal and reminder:\", err);\n    throw err;\n  }\n};\n\nexport { fetchAIInsights, saveGoalAndReminder };\n\n\n\n// Export all functions in one statement\n//export { fetchAIInsights, saveGoalAndReminder, fetchProcrastinationInsights };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAMA,eAAe,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,EAAE;MACjFC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK;MAChC;IACF,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;IACpD,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,mBAAmB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAEf,KAAK,KAAK;EAC7D,IAAI;IACF;IACA,IAAI,CAACc,MAAM,EAAE;MACX,MAAM,IAAIP,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCY,MAAM,OAAO,EAAE;MAC7EX,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUL,KAAK;MAChC,CAAC;MACDgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAI,CAACd,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAMa,SAAS,GAAG,MAAMlB,QAAQ,CAACmB,IAAI,CAAC,CAAC;MACvCT,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEO,SAAS,CAAC;MACnD,MAAM,IAAIZ,KAAK,CAAC,kCAAkC,CAAC;IACrD;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC;IACrD,MAAMA,GAAG;EACX;AACF,CAAC;AAED,SAASX,eAAe,EAAEc,mBAAmB;;AAI7C;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}