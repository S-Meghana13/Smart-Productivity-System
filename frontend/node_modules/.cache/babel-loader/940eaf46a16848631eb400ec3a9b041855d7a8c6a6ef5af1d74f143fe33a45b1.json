{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/SetGoalsandReminders.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\n\nconst SetGoalsAndReminders = ({ token }) => {\n  const { id: taskId } = useParams(); // ✅ get taskId from URL\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n  const [goal, setGoal] = useState({ title: \"\", description: \"\", dueDate: \"\", priority: \"Medium\" });\n  const [reminder, setReminder] = useState({ frequency: \"Daily\", time: \"09:00 AM\" });\n  const [procrastinationData, setProcrastinationData] = useState(null);\n  const [patterns, setPatterns] = useState([]);\n  \n  useEffect(() => {\n    // Fetch procrastination insights and productivity patterns from AI\n    fetchProcrastinationInsights(token)\n      .then(data => {\n        setProcrastinationData(data.insights);\n        setPatterns(data.patterns);\n      })\n      .catch(err => console.error('Error fetching insights:', err));\n  }, [token]);\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n  \n    saveGoalAndReminder(taskId, { goal, reminder }, token)\n      .then(response => {\n        console.log(\"Goal and Reminder saved successfully:\", response);\n      })\n      .catch(err => console.error('Error saving goal and reminder:', err));\n  };\n  \n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name in goal) {\n      setGoal({ ...goal, [name]: value });\n    } else {\n      setReminder({ ...reminder, [name]: value });\n    }\n  };\n\n  const goalForm = (\n    <div className=\"goal-form\">\n      <h2 className=\"text-xl font-semibold\">Set Your Productivity Goal</h2>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={goal.title}\n        placeholder=\"Goal Title\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <textarea\n        name=\"description\"\n        value={goal.description}\n        placeholder=\"Goal Description\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <input\n        type=\"datetime-local\"\n        name=\"dueDate\"\n        value={goal.dueDate}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <select\n        name=\"priority\"\n        value={goal.priority}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Low\">Low</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"High\">High</option>\n      </select>\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Goal</button>\n    </div>\n  );\n\n  const reminderForm = (\n    <div className=\"reminder-form\">\n      <h2 className=\"text-xl font-semibold\">Set Reminder Frequency</h2>\n      <select\n        name=\"frequency\"\n        value={reminder.frequency}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Daily\">Daily</option>\n        <option value=\"Weekly\">Weekly</option>\n        <option value=\"Custom\">Custom</option>\n      </select>\n      <input\n        type=\"time\"\n        name=\"time\"\n        value={reminder.time}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Reminder</button>\n    </div>\n  );\n\n  const procrastinationAnalysis = (\n    <div className=\"procrastination-analysis\">\n      <h2 className=\"text-xl font-semibold\">Procrastination Detection</h2>\n      {procrastinationData && (\n        <div>\n          <p>{procrastinationData.alerts}</p>\n          <div className=\"productivity-chart\">\n            <Line\n              data={{\n                labels: procrastinationData.dates,\n                datasets: [{\n                  label: 'Time Delayed in Task Completion (hrs)',\n                  data: procrastinationData.delays,\n                  borderColor: 'rgba(255, 99, 132, 0.2)',\n                  backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                }]\n              }}\n              options={{ responsive: true, plugins: { title: { display: true, text: 'Delays in Task Completion' }}}}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const productivityPatterns = (\n    <div className=\"productivity-patterns\">\n      <h2 className=\"text-xl font-semibold\">Your Productivity Patterns</h2>\n      <div>\n        <ul>\n          {patterns.map((pattern, idx) => (\n            <li key={idx}>{pattern}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      {goalForm}\n      {reminderForm}\n      {procrastinationAnalysis}\n      {productivityPatterns}\n    </div>\n  );\n};\n\nexport default SetGoalsAndReminders;\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\nconst SetGoalsAndReminders = ({\n  token\n}) => {\n  _s();\n  const {\n    id: taskId\n  } = useParams(); // ✅ get taskId from URL\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n\n  const [goal, setGoal] = useState({\n    title: \"\",\n    description: \"\",\n    dueDate: \"\",\n    priority: \"Medium\"\n  });\n  const [reminder, setReminder] = useState({\n    frequency: \"Daily\",\n    time: \"09:00 AM\"\n  });\n  const [procrastinationData, setProcrastinationData] = useState(null);\n  const [patterns, setPatterns] = useState([]);\n  useEffect(() => {\n    if (taskId) {\n      // Fetch procrastination insights and productivity patterns from AI\n      fetchProcrastinationInsights(token).then(data => {\n        setProcrastinationData(data.insights);\n        setPatterns(data.patterns);\n      }).catch(err => console.error('Error fetching insights:', err));\n    } else {\n      console.error(\"Task ID is missing from URL.\");\n    }\n  }, [taskId, token]); // Added taskId dependency\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n\n    // Check if the taskId is valid before sending the request\n    saveGoalAndReminder(taskId, {\n      goal,\n      reminder\n    }, token).then(response => {\n      console.log(\"Goal and Reminder saved successfully:\", response);\n    }).catch(err => console.error('Error saving goal and reminder:', err));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name in goal) {\n      setGoal({\n        ...goal,\n        [name]: value\n      });\n    } else {\n      setReminder({\n        ...reminder,\n        [name]: value\n      });\n    }\n  };\n  const goalForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Set Your Productivity Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: goal.title,\n      placeholder: \"Goal Title\",\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      value: goal.description,\n      placeholder: \"Goal Description\",\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      name: \"dueDate\",\n      value: goal.dueDate,\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"priority\",\n      value: goal.priority,\n      onChange: handleInputChange,\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"High\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveGoalAndReminder,\n      className: \"save-btn\",\n      children: \"Save Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n  const reminderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Set Reminder Frequency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"frequency\",\n      value: reminder.frequency,\n      onChange: handleInputChange,\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Daily\",\n        children: \"Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Weekly\",\n        children: \"Weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Custom\",\n        children: \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      name: \"time\",\n      value: reminder.time,\n      onChange: handleInputChange,\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveGoalAndReminder,\n      className: \"save-btn\",\n      children: \"Save Reminder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n  const procrastinationAnalysis = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"procrastination-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Procrastination Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), procrastinationData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: procrastinationData.alerts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productivity-chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: procrastinationData.dates,\n            datasets: [{\n              label: 'Time Delayed in Task Completion (hrs)',\n              data: procrastinationData.delays,\n              borderColor: 'rgba(255, 99, 132, 0.2)',\n              backgroundColor: 'rgba(255, 99, 132, 0.5)'\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              title: {\n                display: true,\n                text: 'Delays in Task Completion'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n  const productivityPatterns = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productivity-patterns\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: \"Your Productivity Patterns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: patterns.map((pattern, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pattern\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-2xl shadow-md space-y-6\",\n    children: [goalForm, reminderForm, procrastinationAnalysis, productivityPatterns]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(SetGoalsAndReminders, \"L4ufmTqSwBYooqS+DilWK37M81U=\", false, function () {\n  return [useParams];\n});\n_c = SetGoalsAndReminders;\nexport default SetGoalsAndReminders;\nvar _c;\n$RefreshReg$(_c, \"SetGoalsAndReminders\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Line","fetchProcrastinationInsights","saveGoalAndReminder","Chart","ChartJS","Title","Tooltip","Legend","LineElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","SetGoalsAndReminders","token","_s","id","taskId","console","log","goal","setGoal","title","description","dueDate","priority","reminder","setReminder","frequency","time","procrastinationData","setProcrastinationData","patterns","setPatterns","then","data","insights","catch","err","error","handleSaveGoalAndReminder","response","handleInputChange","e","name","value","target","goalForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","reminderForm","procrastinationAnalysis","alerts","labels","dates","datasets","label","delays","borderColor","backgroundColor","options","responsive","plugins","display","text","productivityPatterns","map","pattern","idx","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/SetGoalsandReminders.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\n\nconst SetGoalsAndReminders = ({ token }) => {\n  const { id: taskId } = useParams(); // ✅ get taskId from URL\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n  const [goal, setGoal] = useState({ title: \"\", description: \"\", dueDate: \"\", priority: \"Medium\" });\n  const [reminder, setReminder] = useState({ frequency: \"Daily\", time: \"09:00 AM\" });\n  const [procrastinationData, setProcrastinationData] = useState(null);\n  const [patterns, setPatterns] = useState([]);\n  \n  useEffect(() => {\n    // Fetch procrastination insights and productivity patterns from AI\n    fetchProcrastinationInsights(token)\n      .then(data => {\n        setProcrastinationData(data.insights);\n        setPatterns(data.patterns);\n      })\n      .catch(err => console.error('Error fetching insights:', err));\n  }, [token]);\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n  \n    saveGoalAndReminder(taskId, { goal, reminder }, token)\n      .then(response => {\n        console.log(\"Goal and Reminder saved successfully:\", response);\n      })\n      .catch(err => console.error('Error saving goal and reminder:', err));\n  };\n  \n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name in goal) {\n      setGoal({ ...goal, [name]: value });\n    } else {\n      setReminder({ ...reminder, [name]: value });\n    }\n  };\n\n  const goalForm = (\n    <div className=\"goal-form\">\n      <h2 className=\"text-xl font-semibold\">Set Your Productivity Goal</h2>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={goal.title}\n        placeholder=\"Goal Title\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <textarea\n        name=\"description\"\n        value={goal.description}\n        placeholder=\"Goal Description\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <input\n        type=\"datetime-local\"\n        name=\"dueDate\"\n        value={goal.dueDate}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <select\n        name=\"priority\"\n        value={goal.priority}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Low\">Low</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"High\">High</option>\n      </select>\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Goal</button>\n    </div>\n  );\n\n  const reminderForm = (\n    <div className=\"reminder-form\">\n      <h2 className=\"text-xl font-semibold\">Set Reminder Frequency</h2>\n      <select\n        name=\"frequency\"\n        value={reminder.frequency}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Daily\">Daily</option>\n        <option value=\"Weekly\">Weekly</option>\n        <option value=\"Custom\">Custom</option>\n      </select>\n      <input\n        type=\"time\"\n        name=\"time\"\n        value={reminder.time}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Reminder</button>\n    </div>\n  );\n\n  const procrastinationAnalysis = (\n    <div className=\"procrastination-analysis\">\n      <h2 className=\"text-xl font-semibold\">Procrastination Detection</h2>\n      {procrastinationData && (\n        <div>\n          <p>{procrastinationData.alerts}</p>\n          <div className=\"productivity-chart\">\n            <Line\n              data={{\n                labels: procrastinationData.dates,\n                datasets: [{\n                  label: 'Time Delayed in Task Completion (hrs)',\n                  data: procrastinationData.delays,\n                  borderColor: 'rgba(255, 99, 132, 0.2)',\n                  backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                }]\n              }}\n              options={{ responsive: true, plugins: { title: { display: true, text: 'Delays in Task Completion' }}}}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const productivityPatterns = (\n    <div className=\"productivity-patterns\">\n      <h2 className=\"text-xl font-semibold\">Your Productivity Patterns</h2>\n      <div>\n        <ul>\n          {patterns.map((pattern, idx) => (\n            <li key={idx}>{pattern}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      {goalForm}\n      {reminderForm}\n      {procrastinationAnalysis}\n      {productivityPatterns}\n    </div>\n  );\n};\n\nexport default SetGoalsAndReminders;\n*/\n\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { fetchProcrastinationInsights, saveGoalAndReminder } from \"../services/api\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale } from 'chart.js';\n\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale);\n\nconst SetGoalsAndReminders = ({ token }) => {\n  const { id: taskId } = useParams(); // ✅ get taskId from URL\n  console.log('Task ID:', taskId); // Log to check if taskId is correctly fetched\n\n  const [goal, setGoal] = useState({ title: \"\", description: \"\", dueDate: \"\", priority: \"Medium\" });\n  const [reminder, setReminder] = useState({ frequency: \"Daily\", time: \"09:00 AM\" });\n  const [procrastinationData, setProcrastinationData] = useState(null);\n  const [patterns, setPatterns] = useState([]);\n\n  useEffect(() => {\n    if (taskId) {\n      // Fetch procrastination insights and productivity patterns from AI\n      fetchProcrastinationInsights(token)\n        .then(data => {\n          setProcrastinationData(data.insights);\n          setPatterns(data.patterns);\n        })\n        .catch(err => console.error('Error fetching insights:', err));\n    } else {\n      console.error(\"Task ID is missing from URL.\");\n    }\n  }, [taskId, token]); // Added taskId dependency\n\n  const handleSaveGoalAndReminder = () => {\n    if (!taskId) {\n      console.error(\"Task ID is missing from URL.\");\n      return;\n    }\n\n    // Check if the taskId is valid before sending the request\n    saveGoalAndReminder(taskId, { goal, reminder }, token)\n      .then(response => {\n        console.log(\"Goal and Reminder saved successfully:\", response);\n      })\n      .catch(err => console.error('Error saving goal and reminder:', err));\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    if (name in goal) {\n      setGoal({ ...goal, [name]: value });\n    } else {\n      setReminder({ ...reminder, [name]: value });\n    }\n  };\n\n  const goalForm = (\n    <div className=\"goal-form\">\n      <h2 className=\"text-xl font-semibold\">Set Your Productivity Goal</h2>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={goal.title}\n        placeholder=\"Goal Title\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <textarea\n        name=\"description\"\n        value={goal.description}\n        placeholder=\"Goal Description\"\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <input\n        type=\"datetime-local\"\n        name=\"dueDate\"\n        value={goal.dueDate}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <select\n        name=\"priority\"\n        value={goal.priority}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Low\">Low</option>\n        <option value=\"Medium\">Medium</option>\n        <option value=\"High\">High</option>\n      </select>\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Goal</button>\n    </div>\n  );\n\n  const reminderForm = (\n    <div className=\"reminder-form\">\n      <h2 className=\"text-xl font-semibold\">Set Reminder Frequency</h2>\n      <select\n        name=\"frequency\"\n        value={reminder.frequency}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      >\n        <option value=\"Daily\">Daily</option>\n        <option value=\"Weekly\">Weekly</option>\n        <option value=\"Custom\">Custom</option>\n      </select>\n      <input\n        type=\"time\"\n        name=\"time\"\n        value={reminder.time}\n        onChange={handleInputChange}\n        className=\"input-field\"\n      />\n      <button onClick={handleSaveGoalAndReminder} className=\"save-btn\">Save Reminder</button>\n    </div>\n  );\n\n  const procrastinationAnalysis = (\n    <div className=\"procrastination-analysis\">\n      <h2 className=\"text-xl font-semibold\">Procrastination Detection</h2>\n      {procrastinationData && (\n        <div>\n          <p>{procrastinationData.alerts}</p>\n          <div className=\"productivity-chart\">\n            <Line\n              data={{\n                labels: procrastinationData.dates,\n                datasets: [{\n                  label: 'Time Delayed in Task Completion (hrs)',\n                  data: procrastinationData.delays,\n                  borderColor: 'rgba(255, 99, 132, 0.2)',\n                  backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                }]\n              }}\n              options={{ responsive: true, plugins: { title: { display: true, text: 'Delays in Task Completion' }}}}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  const productivityPatterns = (\n    <div className=\"productivity-patterns\">\n      <h2 className=\"text-xl font-semibold\">Your Productivity Patterns</h2>\n      <div>\n        <ul>\n          {patterns.map((pattern, idx) => (\n            <li key={idx}>{pattern}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"p-6 bg-white rounded-2xl shadow-md space-y-6\">\n      {goalForm}\n      {reminderForm}\n      {procrastinationAnalysis}\n      {productivityPatterns}\n    </div>\n  );\n};\n\nexport default SetGoalsAndReminders;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}