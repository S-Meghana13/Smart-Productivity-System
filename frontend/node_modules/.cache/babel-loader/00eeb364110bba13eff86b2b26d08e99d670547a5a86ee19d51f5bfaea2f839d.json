{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/context/UserContext.js\",\n  _s = $RefreshSig$();\n// src/context/UserContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    // On mount, check for token in localStorage (or sessionStorage, as you prefer)\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n    }\n  }, []);\n  const login = newToken => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"SSLzquenZQzOMzU62DrezfOo2pU=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","token","setToken","storedToken","localStorage","getItem","login","newToken","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/context/UserContext.js"],"sourcesContent":["// src/context/UserContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create a context\nexport const UserContext = createContext();\n\n// Create a provider component\nexport const UserProvider = ({ children }) => {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    // On mount, check for token in localStorage (or sessionStorage, as you prefer)\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n    }\n  }, []);\n\n  const login = (newToken) => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n  };\n\n  return (\n    <UserContext.Provider value={{ token, login, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACC,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAIC,QAAQ,IAAK;IAC1BH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;IACvCL,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCR,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEK,KAAK;MAAEG;IAAO,CAAE;IAAAV,QAAA,EACnDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CA1BWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}