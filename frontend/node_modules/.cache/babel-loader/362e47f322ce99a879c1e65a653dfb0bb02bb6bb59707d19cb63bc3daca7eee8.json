{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/admin/MonitorProductivity.jsx\",\n  _s = $RefreshSig$();\n// frontend: MonitorProductivity.jsx\n/*import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/MonitorProductivity.css\";\n\nconst MonitorProductivity = () => {\n  const [productivityData, setProductivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchProductivityData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/admin/productivity-summary\");\n        setProductivityData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching productivity data\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProductivityData();\n  }, []);\n\n  return (\n    <div className=\"monitor-productivity\">\n      <h1>Monitor Productivity Trends</h1>\n      {loading ? (\n        <p>Loading productivity data...</p>\n      ) : productivityData.length === 0 ? (\n        <p>No productivity data available.</p>\n      ) : (\n        <div className=\"productivity-reports\">\n          {productivityData.map((data, index) => (\n            <div key={index} className=\"report-card\">\n              <p><strong>User ID:</strong> {data._id}</p>\n              <p><strong>Avg. Productivity Score:</strong> {data.avgProductivityScore.toFixed(2)}%</p>\n              <p><strong>Total Activities:</strong> {data.totalActivities}</p>\n              <p><strong>Last Activity:</strong> {new Date(data.lastActivity).toLocaleString()}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MonitorProductivity;*/\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"../../styles/MonitorProductivity.css\";\n\n// const MonitorProductivity = () => {\n//   const [productivityData, setProductivityData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchProductivityData = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/api/adminproductivity\");\n//         setProductivityData(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching productivity data\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProductivityData();\n//   }, []);\n\n//   return (\n//     <div className=\"monitor-productivity\">\n//       <h1>Monitor Productivity Trends</h1>\n//       {loading ? (\n//         <p>Loading productivity data...</p>\n//       ) : productivityData.length === 0 ? (\n//         <p>No productivity data available.</p>\n//       ) : (\n//         <div className=\"productivity-reports\">\n//           {productivityData.map((data, index) => (\n//             <div key={index} className=\"report-card\">\n//               <h3>{data.userName}</h3>\n//               <p><strong>Productivity Score:</strong> {data.productivityScore}%</p>\n//               <p><strong>Time Spent:</strong> {data.timeSpent} hours</p>\n//               <p><strong>Tasks Completed:</strong> {data.tasksCompleted}</p>\n//               <p><strong>Last Login:</strong> {new Date(data.lastLogin).toLocaleString()}</p>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MonitorProductivity;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/MonitorProductivity.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonitorProductivity = () => {\n  _s();\n  const [productivityData, setProductivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchProductivityData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/admin/productivity\");\n        setProductivityData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching productivity data\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProductivityData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitor-productivity\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor Productivity Trends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading productivity data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : productivityData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No productivity data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"productivity-reports\",\n      children: productivityData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: data.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Productivity Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 18\n          }, this), \" \", data.productivityScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Hours Logged:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 18\n          }, this), \" \", data.totalHours.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tasks Completed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 18\n          }, this), \" \", data.tasksCompleted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-btn\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admindashboard\",\n        className: \"dashboard-link\",\n        children: \"Go to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(MonitorProductivity, \"CeWovw4Paq1wxqPGSgpPbsfhUjo=\");\n_c = MonitorProductivity;\nexport default MonitorProductivity;\nvar _c;\n$RefreshReg$(_c, \"MonitorProductivity\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","MonitorProductivity","_s","productivityData","setProductivityData","loading","setLoading","fetchProductivityData","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","userName","productivityScore","totalHours","toFixed","tasksCompleted","to","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/admin/MonitorProductivity.jsx"],"sourcesContent":["// frontend: MonitorProductivity.jsx\n/*import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/MonitorProductivity.css\";\n\nconst MonitorProductivity = () => {\n  const [productivityData, setProductivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchProductivityData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/admin/productivity-summary\");\n        setProductivityData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching productivity data\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProductivityData();\n  }, []);\n\n  return (\n    <div className=\"monitor-productivity\">\n      <h1>Monitor Productivity Trends</h1>\n      {loading ? (\n        <p>Loading productivity data...</p>\n      ) : productivityData.length === 0 ? (\n        <p>No productivity data available.</p>\n      ) : (\n        <div className=\"productivity-reports\">\n          {productivityData.map((data, index) => (\n            <div key={index} className=\"report-card\">\n              <p><strong>User ID:</strong> {data._id}</p>\n              <p><strong>Avg. Productivity Score:</strong> {data.avgProductivityScore.toFixed(2)}%</p>\n              <p><strong>Total Activities:</strong> {data.totalActivities}</p>\n              <p><strong>Last Activity:</strong> {new Date(data.lastActivity).toLocaleString()}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MonitorProductivity;*/\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"../../styles/MonitorProductivity.css\";\n\n// const MonitorProductivity = () => {\n//   const [productivityData, setProductivityData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchProductivityData = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5000/api/adminproductivity\");\n//         setProductivityData(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching productivity data\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProductivityData();\n//   }, []);\n\n//   return (\n//     <div className=\"monitor-productivity\">\n//       <h1>Monitor Productivity Trends</h1>\n//       {loading ? (\n//         <p>Loading productivity data...</p>\n//       ) : productivityData.length === 0 ? (\n//         <p>No productivity data available.</p>\n//       ) : (\n//         <div className=\"productivity-reports\">\n//           {productivityData.map((data, index) => (\n//             <div key={index} className=\"report-card\">\n//               <h3>{data.userName}</h3>\n//               <p><strong>Productivity Score:</strong> {data.productivityScore}%</p>\n//               <p><strong>Time Spent:</strong> {data.timeSpent} hours</p>\n//               <p><strong>Tasks Completed:</strong> {data.tasksCompleted}</p>\n//               <p><strong>Last Login:</strong> {new Date(data.lastLogin).toLocaleString()}</p>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MonitorProductivity;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/MonitorProductivity.css\";\nimport { Link } from \"react-router-dom\";\n\nconst MonitorProductivity = () => {\n  const [productivityData, setProductivityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchProductivityData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/admin/productivity\");\n        setProductivityData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching productivity data\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProductivityData();\n  }, []);\n\n  return (\n    <div className=\"monitor-productivity\">\n      <h1>Monitor Productivity Trends</h1>\n      {loading ? (\n        <p>Loading productivity data...</p>\n      ) : productivityData.length === 0 ? (\n        <p>No productivity data available.</p>\n      ) : (\n        <div className=\"productivity-reports\">\n          {productivityData.map((data, index) => (\n            <div key={index} className=\"report-card\">\n              <h3>{data.userName}</h3>\n              <p><strong>Productivity Score:</strong> {data.productivityScore}</p>\n              <p><strong>Total Hours Logged:</strong> {data.totalHours.toFixed(2)}</p>\n              <p><strong>Tasks Completed:</strong> {data.tasksCompleted}</p>\n            </div>\n          ))}\n        </div>\n      )}\n       <div className=\"m-btn\">\n      <Link to=\"/admindashboard\" className=\"dashboard-link\">\n        Go to Dashboard\n      </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitorProductivity;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}