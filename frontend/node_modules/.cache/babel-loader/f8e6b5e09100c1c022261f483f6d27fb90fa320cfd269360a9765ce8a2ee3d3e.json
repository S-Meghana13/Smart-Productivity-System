{"ast":null,"code":"var _jsxFileName = \"/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/UpdateTask.jsx\",\n  _s = $RefreshSig$();\n// // UpdateTask.jsx\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// const UpdateTask = () => {\n//   const [task, setTask] = useState({ title: '', description: '', status: 'pending' });\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchTask = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token\");\n//         const res = await axios.get(`http://localhost:5000/api/tasks/${id}`, {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setTask(res.data);\n//       } catch (err) {\n//         console.error(\"Error fetching task:\", err);\n//       }\n//     };\n//     fetchTask();\n//   }, [id]);\n\n//   const handleChange = (e) => {\n//     setTask({ ...task, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.put(`http://localhost:5000/api/tasks/${id}`, task, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       navigate('/dashboard');\n//     } catch (err) {\n//       console.error(\"Error updating task:\", err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-lg mx-auto\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Update Task</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input\n//           type=\"text\"\n//           name=\"title\"\n//           value={task.title}\n//           onChange={handleChange}\n//           className=\"w-full p-2 border rounded\"\n//           required\n//         />\n//         <textarea\n//           name=\"description\"\n//           value={task.description}\n//           onChange={handleChange}\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <select\n//           name=\"status\"\n//           value={task.status}\n//           onChange={handleChange}\n//           className=\"w-full p-2 border rounded\"\n//         >\n//           <option value=\"pending\">Pending</option>\n//           <option value=\"in progress\">In Progress</option>\n//           <option value=\"completed\">Completed</option>\n//         </select>\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n//           Update Task\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UpdateTask;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/UpdateTask.css'; // Assuming you saved the CSS from earlier\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateTask = () => {\n  _s();\n  const [task, setTask] = useState({\n    title: '',\n    description: '',\n    status: 'pending'\n  });\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`http://localhost:5000/api/tasks/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTask(res.data);\n      } catch (err) {\n        console.error(\"Error fetching task:\", err);\n      }\n    };\n    fetchTask();\n  }, [id]);\n  const handleChange = e => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:5000/api/tasks/${id}`, task, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      navigate('/dashboard');\n    } catch (err) {\n      console.error(\"Error updating task:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"update-task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: task.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: task.description,\n        onChange: handleChange,\n        rows: 4,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: task.status,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateTask, \"5Ek5Sz1Pfr4JNGaZl8ySJAOAFmI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateTask;\nexport default UpdateTask;\nvar _c;\n$RefreshReg$(_c, \"UpdateTask\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","UpdateTask","_s","task","setTask","title","description","status","id","navigate","fetchTask","token","localStorage","getItem","res","get","headers","Authorization","data","err","console","error","handleChange","e","target","name","value","handleSubmit","preventDefault","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","rows","_c","$RefreshReg$"],"sources":["/home/apiiit123/smart-productivity-tracker/frontend/src/components/Dashboard/UpdateTask.jsx"],"sourcesContent":["\n// // UpdateTask.jsx\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// const UpdateTask = () => {\n//   const [task, setTask] = useState({ title: '', description: '', status: 'pending' });\n//   const { id } = useParams();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchTask = async () => {\n//       try {\n//         const token = localStorage.getItem(\"token\");\n//         const res = await axios.get(`http://localhost:5000/api/tasks/${id}`, {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setTask(res.data);\n//       } catch (err) {\n//         console.error(\"Error fetching task:\", err);\n//       }\n//     };\n//     fetchTask();\n//   }, [id]);\n\n//   const handleChange = (e) => {\n//     setTask({ ...task, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem(\"token\");\n//       await axios.put(`http://localhost:5000/api/tasks/${id}`, task, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       navigate('/dashboard');\n//     } catch (err) {\n//       console.error(\"Error updating task:\", err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-lg mx-auto\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Update Task</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input\n//           type=\"text\"\n//           name=\"title\"\n//           value={task.title}\n//           onChange={handleChange}\n//           className=\"w-full p-2 border rounded\"\n//           required\n//         />\n//         <textarea\n//           name=\"description\"\n//           value={task.description}\n//           onChange={handleChange}\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <select\n//           name=\"status\"\n//           value={task.status}\n//           onChange={handleChange}\n//           className=\"w-full p-2 border rounded\"\n//         >\n//           <option value=\"pending\">Pending</option>\n//           <option value=\"in progress\">In Progress</option>\n//           <option value=\"completed\">Completed</option>\n//         </select>\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n//           Update Task\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UpdateTask;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '../../styles/UpdateTask.css'; // Assuming you saved the CSS from earlier\n\nconst UpdateTask = () => {\n  const [task, setTask] = useState({ title: '', description: '', status: 'pending' });\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`http://localhost:5000/api/tasks/${id}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setTask(res.data);\n      } catch (err) {\n        console.error(\"Error fetching task:\", err);\n      }\n    };\n    fetchTask();\n  }, [id]);\n\n  const handleChange = (e) => {\n    setTask({ ...task, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:5000/api/tasks/${id}`, task, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      navigate('/dashboard');\n    } catch (err) {\n      console.error(\"Error updating task:\", err);\n    }\n  };\n\n  return (\n    <div className=\"update-task-container\">\n      <h2>Update Task</h2>\n      <form onSubmit={handleSubmit} className=\"update-task-form\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={task.title}\n          onChange={handleChange}\n          required\n        />\n        <textarea\n          name=\"description\"\n          placeholder=\"Description\"\n          value={task.description}\n          onChange={handleChange}\n          rows={4}\n          required\n        />\n        <select\n          name=\"status\"\n          value={task.status}\n          onChange={handleChange}\n        >\n          <option value=\"pending\">Pending</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n        <button type=\"submit\">Update Task</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}